{
	"id": "57c09a36cd4782b959908baefb1790e9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/protocols/Compound?utm=code\n*/\n\n// SPDX-License-Identifier: BSD-3-Clause\npragma solidity ^0.8.10;\n\ncontract Comp {\n    /// @notice EIP-20 token name for this token\n    string public constant name = \"Test\";\n\n    /// @notice EIP-20 token symbol for this token\n    string public constant symbol = \"TEST\";\n\n    /// @notice EIP-20 token decimals for this token\n    uint8 public constant decimals = 18;\n\n    /// @notice Total number of tokens in circulation\n    uint public constant totalSupply = 10000000e18; // 10 million Comp\n\n    /// @notice Allowance amounts on behalf of others\n    mapping (address => mapping (address => uint96)) internal allowances;\n\n    /// @notice Official record of token balances for each account\n    mapping (address => uint96) internal balances;\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) public delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint96 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /// @notice The standard EIP-20 transfer event\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @notice The standard EIP-20 approval event\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /**\n     * @notice Construct a new Comp token\n     * @param account The initial account to grant all the tokens\n     */\n    constructor(address account) public {\n        balances[account] = uint96(totalSupply);\n        emit Transfer(address(0), account, totalSupply);\n    }\n\n    /**\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n     * @param account The address of the account holding the funds\n     * @param spender The address of the account spending the funds\n     * @return The number of tokens approved\n     */\n    function allowance(address account, address spender) external view returns (uint) {\n        return allowances[account][spender];\n    }\n\n    /**\n     * @notice Approve `spender` to transfer up to `amount` from `src`\n     * @dev This will overwrite the approval amount for `spender`\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n     * @param spender The address of the account which may transfer tokens\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n     * @return Whether or not the approval succeeded\n     */\n    function approve(address spender, uint rawAmount) external returns (bool) {\n        uint96 amount;\n        if (rawAmount == type(uint).max) {\n            amount = type(uint96).max;\n        } else {\n            amount = safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\");\n        }\n\n        allowances[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @notice Get the number of tokens held by the `account`\n     * @param account The address of the account to get the balance of\n     * @return The number of tokens held\n     */\n    function balanceOf(address account) external view returns (uint) {\n        return balances[account];\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transfer(address dst, uint rawAmount) external returns (bool) {\n        uint96 amount = safe96(rawAmount, \"Comp::transfer: amount exceeds 96 bits\");\n        _transferTokens(msg.sender, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `src` to `dst`\n     * @param src The address of the source account\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {\n        address spender = msg.sender;\n        uint96 spenderAllowance = allowances[src][spender];\n        uint96 amount = safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\");\n\n        if (spender != src && spenderAllowance != type(uint96).max) {\n            uint96 newAllowance = sub96(spenderAllowance, amount, \"Comp::transferFrom: transfer amount exceeds spender allowance\");\n            allowances[src][spender] = newAllowance;\n\n            emit Approval(src, spender, newAllowance);\n        }\n\n        _transferTokens(src, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"Comp::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"Comp::delegateBySig: invalid nonce\");\n        require(block.timestamp <= expiry, \"Comp::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint96) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {\n        require(blockNumber < block.number, \"Comp::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint96 delegatorBalance = balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _transferTokens(address src, address dst, uint96 amount) internal {\n        require(src != address(0), \"Comp::_transferTokens: cannot transfer from the zero address\");\n        require(dst != address(0), \"Comp::_transferTokens: cannot transfer to the zero address\");\n\n        balances[src] = sub96(balances[src], amount, \"Comp::_transferTokens: transfer amount exceeds balance\");\n        balances[dst] = add96(balances[dst], amount, \"Comp::_transferTokens: transfer amount overflows\");\n        emit Transfer(src, dst, amount);\n\n        _moveDelegates(delegates[src], delegates[dst], amount);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint96 srcRepNew = sub96(srcRepOld, amount, \"Comp::_moveVotes: vote amount underflows\");\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint96 dstRepNew = add96(dstRepOld, amount, \"Comp::_moveVotes: vote amount overflows\");\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {\n      uint32 blockNumber = safe32(block.number, \"Comp::_writeCheckpoint: block number exceeds 32 bits\");\n\n      if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n          checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n      } else {\n          checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n          numCheckpoints[delegatee] = nCheckpoints + 1;\n      }\n\n      emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {\n        require(n < 2**96, errorMessage);\n        return uint96(n);\n    }\n\n    function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\n        uint96 c = a + b;\n        require(c >= a, errorMessage);\n        return c;\n    }\n\n    function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function getChainId() internal view returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol": {
				"Comp": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint96",
									"name": "votes",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"account": "The address of the account holding the funds",
									"spender": "The address of the account spending the funds"
								},
								"returns": {
									"_0": "The number of tokens approved"
								}
							},
							"approve(address,uint256)": {
								"details": "This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
								"params": {
									"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
									"spender": "The address of the account which may transfer tokens"
								},
								"returns": {
									"_0": "Whether or not the approval succeeded"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address of the account to get the balance of"
								},
								"returns": {
									"_0": "The number of tokens held"
								}
							},
							"constructor": {
								"params": {
									"account": "The initial account to grant all the tokens"
								}
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer"
								},
								"returns": {
									"_0": "Whether or not the transfer succeeded"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer",
									"src": "The address of the source account"
								},
								"returns": {
									"_0": "Whether or not the transfer succeeded"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1314:13875  contract Comp {... */\n  mstore(0x40, 0x80)\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":3794:3943  constructor(address account) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":3840:3857  balances[account] */\n  dup2\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":3840:3848  balances */\n  0x01\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":3840:3857  balances[account] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":3840:3879  balances[account] = uint96(totalSupply) */\n  dup1\n  sload\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1706:1717  10000000e18 */\n  0x084595161401484a000000\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":3840:3879  balances[account] = uint96(totalSupply) */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":3894:3936  Transfer(address(0), account, totalSupply) */\n  swap1\n  mload\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n  tag_6\n  swap2\n    /* \"#utility.yul\":455:480   */\n  swap1\n  dup2\n  mstore\n    /* \"#utility.yul\":443:445   */\n  0x20\n    /* \"#utility.yul\":428:446   */\n  add\n  swap1\n    /* \"#utility.yul\":309:486   */\n  jump\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":3894:3936  Transfer(address(0), account, totalSupply) */\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":3794:3943  constructor(address account) public {... */\n  pop\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1314:13875  contract Comp {... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_11\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_11:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_12:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:486   */\ntag_9:\n    /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1314:13875  contract Comp {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1314:13875  contract Comp {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb4b5ea57\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1383:1419  string public constant name = \"Test\" */\n    tag_3:\n      tag_25\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe2, 0x15195cdd)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4841:5260  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4841:5260  function approve(address spender, uint rawAmount) external returns (bool) {... */\n      tag_27\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1671:1717  uint public constant totalSupply = 10000000e18 */\n    tag_5:\n      tag_35\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1706:1717  10000000e18 */\n      0x084595161401484a000000\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1671:1717  uint public constant totalSupply = 10000000e18 */\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1671:1717  uint public constant totalSupply = 10000000e18 */\n      tag_27\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2577:2699  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_35\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2619:2699  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2577:2699  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6353:7017  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_7:\n      tag_29\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1575:1610  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_48\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1608:1610  18 */\n      0x12\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1575:1610  uint8 public constant decimals = 18 */\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":2114:2118   */\n      0xff\n        /* \"#utility.yul\":2102:2119   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2084:2120   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2072:2074   */\n      0x20\n        /* \"#utility.yul\":2057:2075   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1575:1610  uint8 public constant decimals = 18 */\n      tag_27\n        /* \"#utility.yul\":1942:2126   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2042:2087  mapping (address => address) public delegates */\n    tag_9:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_52:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2486:2518   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2468:2519   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2456:2458   */\n      0x20\n        /* \"#utility.yul\":2441:2459   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2042:2087  mapping (address => address) public delegates */\n      tag_27\n        /* \"#utility.yul\":2322:2525   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7159:7259  function delegate(address delegatee) public {... */\n    tag_10:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2458:2507  mapping (address => uint32) public numCheckpoints */\n    tag_11:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_62:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n      dup2\n      jump\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":2704:2714   */\n      0xffffffff\n        /* \"#utility.yul\":2692:2715   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2674:2716   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2662:2664   */\n      0x20\n        /* \"#utility.yul\":2647:2665   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2458:2507  mapping (address => uint32) public numCheckpoints */\n      tag_27\n        /* \"#utility.yul\":2530:2722   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5456:5562  function balanceOf(address account) external view returns (uint) {... */\n    tag_12:\n      tag_35\n      tag_67\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5538:5555  balances[account] */\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5515:5519  uint */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5538:5555  balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5538:5546  balances */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5538:5555  balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5456:5562  function balanceOf(address account) external view returns (uint) {... */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9309:10495  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_13:\n      tag_70\n      tag_71\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":2889:2928   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2871:2929   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2859:2861   */\n      0x20\n        /* \"#utility.yul\":2844:2862   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9309:10495  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n      tag_27\n        /* \"#utility.yul\":2727:2935   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2985:3024  mapping (address => uint) public nonces */\n    tag_14:\n      tag_35\n      tag_76\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_76:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":1477:1515  string public constant symbol = \"TEST\" */\n    tag_15:\n      tag_25\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe2, 0x151154d5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5818:6052  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n    tag_16:\n      tag_29\n      tag_83\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8668:8887  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_17:\n      tag_70\n      tag_87\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7682:8474  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_18:\n      tag_58\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4239:4373  function allowance(address account, address spender) external view returns (uint) {... */\n    tag_19:\n      tag_35\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4338:4357  allowances[account] */\n      swap2\n      dup3\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4315:4319  uint */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4338:4357  allowances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4338:4366  allowances[account][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4239:4373  function allowance(address account, address spender) external view returns (uint) {... */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2790:2907  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_20:\n      tag_35\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2836:2907  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2790:2907  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2322:2392  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_21:\n      tag_102\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      0x03\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      dup2\n      and\n      swap1\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      dup3\n      jump\n    tag_102:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4383:4393   */\n      0xffffffff\n        /* \"#utility.yul\":4371:4394   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4353:4395   */\n      dup4\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":4431:4470   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4426:4428   */\n      0x20\n        /* \"#utility.yul\":4411:4429   */\n      dup4\n      add\n        /* \"#utility.yul\":4404:4471   */\n      mstore\n        /* \"#utility.yul\":4326:4344   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2322:2392  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n      tag_27\n        /* \"#utility.yul\":4183:4477   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4841:5260  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_32:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4909:4913  bool */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4925:4938  uint96 amount */\n      dup1\n      not(0x00)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4952:4961  rawAmount */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4952:4979  rawAmount == type(uint).max */\n      eq\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4948:5129  if (rawAmount == type(uint).max) {... */\n      iszero\n      tag_109\n      jumpi\n      pop\n      sub(shl(0x60, 0x01), 0x01)\n      jump(tag_110)\n    tag_109:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5060:5118  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      tag_111\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5067:5076  rawAmount */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5060:5118  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe\n      0x25\n      swap2\n      codecopy\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5060:5066  safe96 */\n      tag_112\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5060:5118  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_111:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5051:5118  amount = safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4948:5129  if (rawAmount == type(uint).max) {... */\n    tag_110:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5150:5160  msg.sender */\n      caller\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5139:5149  allowances */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5139:5161  allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5139:5170  allowances[msg.sender][spender] */\n      dup10\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5139:5179  allowances[msg.sender][spender] = amount */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5195:5232  Approval(msg.sender, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":2871:2929   */\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5139:5170  allowances[msg.sender][spender] */\n      swap2\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5150:5160  msg.sender */\n      swap2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5195:5232  Approval(msg.sender, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":2844:2862   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5195:5232  Approval(msg.sender, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5249:5253  true */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5242:5253  return true */\n      swap2\n      pop\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":4841:5260  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_108:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6353:7017  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6515:6530  allowances[src] */\n      dup4\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6435:6439  bool */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6515:6530  allowances[src] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6469:6479  msg.sender */\n      caller\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6515:6539  allowances[src][spender] */\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6565:6623  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x25\n      dup1\n      dup5\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6469:6479  msg.sender */\n      swap2\n      swap4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6515:6539  allowances[src][spender] */\n      swap1\n      swap2\n      and\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6435:6439  bool */\n      dup6\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6565:6623  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      tag_116\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6572:6581  rawAmount */\n      dup9\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6565:6623  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      swap2\n      swap1\n      data_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6565:6571  safe96 */\n      tag_112\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6565:6623  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_116:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6549:6623  uint96 amount = safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6649:6652  src */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6638:6652  spender != src */\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6638:6645  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6638:6652  spender != src */\n      and\n      eq\n      iszero\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6638:6692  spender != src && spenderAllowance != type(uint96).max */\n      dup1\n      iszero\n      tag_117\n      jumpi\n      pop\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6656:6692  spenderAllowance != type(uint96).max */\n      dup3\n      dup2\n      and\n      eq\n      iszero\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6638:6692  spender != src && spenderAllowance != type(uint96).max */\n    tag_117:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6634:6946  if (spender != src && spenderAllowance != type(uint96).max) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6708:6727  uint96 newAllowance */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6730:6826  sub96(spenderAllowance, amount, \"Comp::transferFrom: transfer amount exceeds spender allowance\") */\n      tag_119\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6736:6752  spenderAllowance */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6754:6760  amount */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6730:6826  sub96(spenderAllowance, amount, \"Comp::transferFrom: transfer amount exceeds spender allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x3d\n      dup2\n      mstore\n      0x20\n      add\n      data_b7ac833594da1df58fd15c3b6b55eb20762dba088c48b65ce9d522a789ff2495\n      0x3d\n      swap2\n      codecopy\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6730:6735  sub96 */\n      tag_120\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6730:6826  sub96(spenderAllowance, amount, \"Comp::transferFrom: transfer amount exceeds spender allowance\") */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6840:6855  allowances[src] */\n      dup10\n      dup2\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6840:6850  allowances */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6840:6855  allowances[src] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6840:6864  allowances[src][spender] */\n      swap5\n      dup11\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6840:6879  allowances[src][spender] = newAllowance */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6899:6935  Approval(src, spender, newAllowance) */\n      swap2\n      mload\n        /* \"#utility.yul\":2871:2929   */\n      swap2\n      dup3\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6840:6879  allowances[src][spender] = newAllowance */\n      swap4\n      swap5\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6840:6864  allowances[src][spender] */\n      swap2\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6840:6855  allowances[src] */\n      swap1\n      swap2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6899:6935  Approval(src, spender, newAllowance) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":2844:2862   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6899:6935  Approval(src, spender, newAllowance) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6694:6946  {... */\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6634:6946  if (spender != src && spenderAllowance != type(uint96).max) {... */\n    tag_118:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6956:6989  _transferTokens(src, dst, amount) */\n      tag_122\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6972:6975  src */\n      dup8\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6977:6980  dst */\n      dup8\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6982:6988  amount */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6956:6971  _transferTokens */\n      tag_123\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6956:6989  _transferTokens(src, dst, amount) */\n      jump\t// in\n    tag_122:\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7006:7010  true */\n      0x01\n      swap7\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6353:7017  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7159:7259  function delegate(address delegatee) public {... */\n    tag_60:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7220:7252  _delegate(msg.sender, delegatee) */\n      tag_125\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7230:7240  msg.sender */\n      caller\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7242:7251  delegatee */\n      dup3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7220:7229  _delegate */\n      tag_126\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7220:7252  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_125:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7159:7259  function delegate(address delegatee) public {... */\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9309:10495  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_72:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9388:9394  uint96 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9428:9440  block.number */\n      number\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9414:9425  blockNumber */\n      dup3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9414:9440  blockNumber < block.number */\n      lt\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9406:9484  require(blockNumber < block.number, \"Comp::getPriorVotes: not yet determined\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4898:4900   */\n      0x20\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9406:9484  require(blockNumber < block.number, \"Comp::getPriorVotes: not yet determined\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4880:4901   */\n      mstore\n        /* \"#utility.yul\":4937:4939   */\n      0x27\n        /* \"#utility.yul\":4917:4935   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4910:4940   */\n      mstore\n        /* \"#utility.yul\":4976:5010   */\n      0x436f6d703a3a6765745072696f72566f7465733a206e6f742079657420646574\n        /* \"#utility.yul\":4956:4974   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4949:5011   */\n      mstore\n      shl(0xca, 0x195c9b5a5b9959)\n        /* \"#utility.yul\":5027:5045   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5020:5057   */\n      mstore\n        /* \"#utility.yul\":5074:5093   */\n      0x84\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9406:9484  require(blockNumber < block.number, \"Comp::getPriorVotes: not yet determined\") */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9517:9540  numCheckpoints[account] */\n      dup4\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9495:9514  uint32 nCheckpoints */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9517:9540  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9517:9531  numCheckpoints */\n      0x04\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9517:9540  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9554:9571  nCheckpoints == 0 */\n      dup1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9550:9606  if (nCheckpoints == 0) {... */\n      tag_132\n      jumpi\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9594:9595  0 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9587:9595  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_108)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9550:9606  if (nCheckpoints == 0) {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9663:9683  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9663:9674  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9663:9683  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9715:9726  blockNumber */\n      dup5\n      swap2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9684:9700  nCheckpoints - 1 */\n      tag_133\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9699:9700  1 */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9684:9696  nCheckpoints */\n      dup6\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9684:9700  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9663:9701  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9663:9711  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9663:9726  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      gt\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9659:9804  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_135\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9749:9769  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9749:9760  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9749:9769  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9770:9786  nCheckpoints - 1 */\n      tag_136\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9785:9786  1 */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9770:9782  nCheckpoints */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9770:9786  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_136:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9749:9787  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9749:9793  checkpoints[account][nCheckpoints - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9742:9793  return checkpoints[account][nCheckpoints - 1].votes */\n      tag_108\n      swap1\n      pop\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9659:9804  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9862:9882  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9862:9873  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9862:9882  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9862:9885  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9862:9895  checkpoints[account][0].fromBlock */\n      sload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9862:9885  checkpoints[account][0] */\n      0xffffffff\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9862:9895  checkpoints[account][0].fromBlock */\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9862:9909  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9858:9944  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9932:9933  0 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9925:9933  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_108)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9858:9944  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_137:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9954:9966  uint32 lower */\n      0x00\n      dup1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9995:10011  nCheckpoints - 1 */\n      tag_138\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10010:10011  1 */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9995:10007  nCheckpoints */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9995:10011  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_138:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9980:10011  uint32 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10021:10439  while (upper > lower) {... */\n    tag_139:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10036:10041  lower */\n      dup2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10028:10041  upper > lower */\n      0xffffffff\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10028:10033  upper */\n      dup2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10028:10041  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10021:10439  while (upper > lower) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10057:10070  uint32 center */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10099:10100  2 */\n      0x02\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10082:10095  upper - lower */\n      tag_141\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10090:10095  lower */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10082:10087  upper */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10082:10095  upper - lower */\n      tag_134\n      jump\t// in\n    tag_141:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10081:10100  (upper - lower) / 2 */\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10073:10100  upper - (upper - lower) / 2 */\n      tag_144\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10073:10078  upper */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10073:10100  upper - (upper - lower) / 2 */\n      tag_134\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10164:10184  checkpoints[account] */\n      dup9\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10141:10161  Checkpoint memory cp */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10164:10184  checkpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10164:10175  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10164:10184  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10164:10192  checkpoints[account][center] */\n      0xffffffff\n      dup6\n      dup2\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10141:10192  Checkpoint memory cp = checkpoints[account][center] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      swap3\n      dup4\n      and\n      dup1\n      dup3\n      mstore\n      shl(0x20, 0x01)\n      swap1\n      swap4\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10164:10192  checkpoints[account][center] */\n      swap2\n      swap3\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10210:10237  cp.fromBlock == blockNumber */\n      dup8\n      eq\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10206:10429  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10264:10272  cp.votes */\n      0x20\n      add\n      mload\n      swap5\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10257:10272  return cp.votes */\n      tag_108\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10206:10429  if (cp.fromBlock == blockNumber) {... */\n    tag_145:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10297:10309  cp.fromBlock */\n      dup1\n      mload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10297:10323  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      dup8\n      gt\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10293:10429  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10351:10357  center */\n      dup2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10343:10357  lower = center */\n      swap4\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10293:10429  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_148)\n    tag_147:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10404:10414  center - 1 */\n      tag_149\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10413:10414  1 */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10404:10410  center */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10404:10414  center - 1 */\n      tag_134\n      jump\t// in\n    tag_149:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10396:10414  upper = center - 1 */\n      swap3\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10293:10429  if (cp.fromBlock < blockNumber) {... */\n    tag_148:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10043:10439  {... */\n      pop\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10021:10439  while (upper > lower) {... */\n      jump(tag_139)\n    tag_140:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10455:10475  checkpoints[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10455:10466  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10455:10475  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10455:10482  checkpoints[account][lower] */\n      0xffffffff\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10455:10488  checkpoints[account][lower].votes */\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      shl(0x20, 0x01)\n      swap1\n      swap2\n      div\n      and\n      swap2\n      pop\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":9309:10495  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5818:6052  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n    tag_84:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5883:5887  bool */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5899:5912  uint96 amount */\n      dup1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5915:5974  safe96(rawAmount, \"Comp::transfer: amount exceeds 96 bits\") */\n      tag_151\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5922:5931  rawAmount */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5915:5974  safe96(rawAmount, \"Comp::transfer: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_5bdeafae4aaace0ed9b7df6e60f285c9e8e84a3ceac05af6b6259bfed8e161f5\n      0x26\n      swap2\n      codecopy\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5915:5921  safe96 */\n      tag_112\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5915:5974  safe96(rawAmount, \"Comp::transfer: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_151:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5899:5974  uint96 amount = safe96(rawAmount, \"Comp::transfer: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5984:6024  _transferTokens(msg.sender, dst, amount) */\n      tag_152\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6000:6010  msg.sender */\n      caller\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6012:6015  dst */\n      dup6\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6017:6023  amount */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5984:5999  _transferTokens */\n      tag_123\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5984:6024  _transferTokens(msg.sender, dst, amount) */\n      jump\t// in\n    tag_152:\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":6041:6045  true */\n      0x01\n      swap4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":5818:6052  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8668:8887  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8773:8796  numCheckpoints[account] */\n      dup2\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8733:8739  uint96 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8773:8796  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8773:8787  numCheckpoints */\n      0x04\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8773:8796  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8813:8829  nCheckpoints > 0 */\n      dup1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8813:8880  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_154\n      jumpi\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8879:8880  0 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8813:8880  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_155)\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8832:8852  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8832:8843  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8832:8852  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8853:8869  nCheckpoints - 1 */\n      tag_156\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8868:8869  1 */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8853:8865  nCheckpoints */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8853:8869  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_156:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8832:8870  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8832:8876  checkpoints[account][nCheckpoints - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8813:8880  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_155:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8806:8880  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8668:8887  function getCurrentVotes(address account) external view returns (uint96) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7682:8474  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_93:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7877:7881  name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x04\n      dup2\n      mstore\n      shl(0xe2, 0x15195cdd)\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7833:7913  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      dup2\n      mload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2619:2699  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7833:7913  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":5986:6011   */\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7861:7883  keccak256(bytes(name)) */\n      0x85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12\n        /* \"#utility.yul\":6027:6045   */\n      dup2\n      dup5\n      add\n        /* \"#utility.yul\":6020:6054   */\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13832:13841  chainid() */\n      chainid\n        /* \"#utility.yul\":6070:6088   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":6063:6097   */\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7907:7911  this */\n      address\n        /* \"#utility.yul\":6113:6131   */\n      0x80\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":6106:6166   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7833:7913  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      dup4\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":5958:5977   */\n      0xa0\n      dup3\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7833:7913  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      dup5\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7823:7914  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":2836:2907  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7955:8012  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0xc0\n      dup4\n      add\n        /* \"#utility.yul\":6408:6433   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6469:6501   */\n      dup11\n      and\n        /* \"#utility.yul\":6449:6467   */\n      0xe0\n      dup4\n      add\n        /* \"#utility.yul\":6442:6502   */\n      mstore\n        /* \"#utility.yul\":6518:6536   */\n      0x0100\n      dup3\n      add\n        /* \"#utility.yul\":6511:6545   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":6561:6579   */\n      0x0120\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":6554:6588   */\n      dup10\n      swap1\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7955:8012  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      dup5\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":6380:6399   */\n      0x0140\n      dup4\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7955:8012  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap1\n      swap5\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7945:8013  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      dup4\n      mload\n      swap4\n      swap1\n      swap3\n      add\n      swap3\n      swap1\n      swap3\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8050:8107  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x0160\n      dup5\n      add\n        /* \"#utility.yul\":6857:6884   */\n      mstore\n        /* \"#utility.yul\":6900:6911   */\n      0x0162\n      dup4\n      add\n        /* \"#utility.yul\":6893:6920   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6936:6948   */\n      0x0182\n      dup4\n      add\n        /* \"#utility.yul\":6929:6957   */\n      dup2\n      swap1\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7823:7914  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      swap1\n      swap2\n      0x00\n      swap1\n        /* \"#utility.yul\":6973:6985   */\n      0x01a2\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8050:8107  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8040:8108  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup1\n      mload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8050:8107  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x20\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8040:8108  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8118:8135  address signatory */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8138:8164  ecrecover(digest, v, r, s) */\n      dup1\n      dup6\n      mstore\n      swap2\n      dup5\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":7223:7248   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7296:7300   */\n      0xff\n        /* \"#utility.yul\":7284:7301   */\n      dup11\n      and\n        /* \"#utility.yul\":7264:7282   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":7257:7302   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7318:7336   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":7311:7345   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":7361:7379   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":7354:7388   */\n      dup8\n      swap1\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8040:8108  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap1\n      swap3\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8118:8135  address signatory */\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8138:8164  ecrecover(digest, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":7195:7214   */\n      0xa0\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8138:8164  ecrecover(digest, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8182:8205  signatory != address(0) */\n      dup2\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8174:8248  require(signatory != address(0), \"Comp::delegateBySig: invalid signature\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7601:7603   */\n      0x20\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8174:8248  require(signatory != address(0), \"Comp::delegateBySig: invalid signature\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7583:7604   */\n      mstore\n        /* \"#utility.yul\":7640:7642   */\n      0x26\n        /* \"#utility.yul\":7620:7638   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7613:7643   */\n      mstore\n        /* \"#utility.yul\":7679:7713   */\n      0x436f6d703a3a64656c656761746542795369673a20696e76616c696420736967\n        /* \"#utility.yul\":7659:7677   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7652:7714   */\n      mstore\n      shl(0xd0, 0x6e6174757265)\n        /* \"#utility.yul\":7730:7748   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7723:7759   */\n      mstore\n        /* \"#utility.yul\":7776:7795   */\n      0x84\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8174:8248  require(signatory != address(0), \"Comp::delegateBySig: invalid signature\") */\n      tag_130\n        /* \"#utility.yul\":7399:7801   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8174:8248  require(signatory != address(0), \"Comp::delegateBySig: invalid signature\") */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8275:8292  nonces[signatory] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8275:8281  nonces */\n      0x05\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8275:8292  nonces[signatory] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8275:8294  nonces[signatory]++ */\n      dup1\n      sload\n      swap2\n      tag_173\n      dup4\n      tag_174\n      jump\t// in\n    tag_173:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8266:8271  nonce */\n      dup10\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8266:8294  nonce == nonces[signatory]++ */\n      eq\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8258:8333  require(nonce == nonces[signatory]++, \"Comp::delegateBySig: invalid nonce\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8148:8150   */\n      0x20\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8258:8333  require(nonce == nonces[signatory]++, \"Comp::delegateBySig: invalid nonce\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8130:8151   */\n      mstore\n        /* \"#utility.yul\":8187:8189   */\n      0x22\n        /* \"#utility.yul\":8167:8185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8160:8190   */\n      mstore\n        /* \"#utility.yul\":8226:8260   */\n      0x436f6d703a3a64656c656761746542795369673a20696e76616c6964206e6f6e\n        /* \"#utility.yul\":8206:8224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8199:8261   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8277:8295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8270:8302   */\n      mstore\n        /* \"#utility.yul\":8319:8338   */\n      0x84\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8258:8333  require(nonce == nonces[signatory]++, \"Comp::delegateBySig: invalid nonce\") */\n      tag_130\n        /* \"#utility.yul\":7946:8344   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8258:8333  require(nonce == nonces[signatory]++, \"Comp::delegateBySig: invalid nonce\") */\n    tag_175:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8370:8376  expiry */\n      dup8\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8351:8366  block.timestamp */\n      timestamp\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8351:8376  block.timestamp <= expiry */\n      gt\n      iszero\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8343:8419  require(block.timestamp <= expiry, \"Comp::delegateBySig: signature expired\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8551:8553   */\n      0x20\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8343:8419  require(block.timestamp <= expiry, \"Comp::delegateBySig: signature expired\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8533:8554   */\n      mstore\n        /* \"#utility.yul\":8590:8592   */\n      0x26\n        /* \"#utility.yul\":8570:8588   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8563:8593   */\n      mstore\n        /* \"#utility.yul\":8629:8663   */\n      0x436f6d703a3a64656c656761746542795369673a207369676e61747572652065\n        /* \"#utility.yul\":8609:8627   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8602:8664   */\n      mstore\n      shl(0xd2, 0x1e1c1a5c9959)\n        /* \"#utility.yul\":8680:8698   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8673:8709   */\n      mstore\n        /* \"#utility.yul\":8726:8745   */\n      0x84\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8343:8419  require(block.timestamp <= expiry, \"Comp::delegateBySig: signature expired\") */\n      tag_130\n        /* \"#utility.yul\":8349:8751   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8343:8419  require(block.timestamp <= expiry, \"Comp::delegateBySig: signature expired\") */\n    tag_178:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8436:8467  _delegate(signatory, delegatee) */\n      tag_181\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8446:8455  signatory */\n      dup2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8457:8466  delegatee */\n      dup12\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8436:8445  _delegate */\n      tag_126\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8436:8467  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_181:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":8429:8467  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":7682:8474  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13202:13360  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_112:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13277:13283  uint96 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13314:13326  errorMessage */\n      dup2\n      shl(0x60, 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13303:13312  n < 2**96 */\n      dup5\n      lt\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13295:13327  require(n < 2**96, errorMessage) */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_184:\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13351:13352  n */\n      swap2\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13202:13360  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13556:13718  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_120:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13642:13648  uint96 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13673:13674  a */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13668:13674  b <= a */\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13668:13669  b */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13668:13674  b <= a */\n      and\n      gt\n      iszero\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13676:13688  errorMessage */\n      dup3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13660:13689  require(b <= a, errorMessage) */\n      swap1\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_187:\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13706:13711  a - b */\n      tag_189\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13710:13711  b */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13706:13707  a */\n      dup6\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13706:13711  a - b */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13699:13711  return a - b */\n      swap5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13556:13718  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10874:11479  function _transferTokens(address src, address dst, uint96 amount) internal {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10967:10984  src != address(0) */\n      dup4\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10959:11049  require(src != address(0), \"Comp::_transferTokens: cannot transfer from the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9200:9202   */\n      0x20\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10959:11049  require(src != address(0), \"Comp::_transferTokens: cannot transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9182:9203   */\n      mstore\n        /* \"#utility.yul\":9239:9241   */\n      0x3c\n        /* \"#utility.yul\":9219:9237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9212:9242   */\n      mstore\n        /* \"#utility.yul\":9278:9312   */\n      0x436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472\n        /* \"#utility.yul\":9258:9276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9251:9313   */\n      mstore\n        /* \"#utility.yul\":9349:9379   */\n      0x616e736665722066726f6d20746865207a65726f206164647265737300000000\n        /* \"#utility.yul\":9329:9347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9322:9380   */\n      mstore\n        /* \"#utility.yul\":9397:9416   */\n      0x84\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10959:11049  require(src != address(0), \"Comp::_transferTokens: cannot transfer from the zero address\") */\n      tag_130\n        /* \"#utility.yul\":8998:9422   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10959:11049  require(src != address(0), \"Comp::_transferTokens: cannot transfer from the zero address\") */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11067:11084  dst != address(0) */\n      dup3\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11059:11147  require(dst != address(0), \"Comp::_transferTokens: cannot transfer to the zero address\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9629:9631   */\n      0x20\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11059:11147  require(dst != address(0), \"Comp::_transferTokens: cannot transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9611:9632   */\n      mstore\n        /* \"#utility.yul\":9668:9670   */\n      0x3a\n        /* \"#utility.yul\":9648:9666   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9641:9671   */\n      mstore\n        /* \"#utility.yul\":9707:9741   */\n      0x436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472\n        /* \"#utility.yul\":9687:9705   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9680:9742   */\n      mstore\n        /* \"#utility.yul\":9778:9806   */\n      0x616e7366657220746f20746865207a65726f2061646472657373000000000000\n        /* \"#utility.yul\":9758:9776   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9751:9807   */\n      mstore\n        /* \"#utility.yul\":9824:9843   */\n      0x84\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11059:11147  require(dst != address(0), \"Comp::_transferTokens: cannot transfer to the zero address\") */\n      tag_130\n        /* \"#utility.yul\":9427:9849   */\n      jump\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11059:11147  require(dst != address(0), \"Comp::_transferTokens: cannot transfer to the zero address\") */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11180:11193  balances[src] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11180:11188  balances */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11180:11193  balances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11174:11260  sub96(balances[src], amount, \"Comp::_transferTokens: transfer amount exceeds balance\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x36\n      dup1\n      dup5\n      mstore\n      tag_198\n      swap4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11180:11193  balances[src] */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11195:11201  amount */\n      dup6\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11174:11260  sub96(balances[src], amount, \"Comp::_transferTokens: transfer amount exceeds balance\") */\n      swap2\n      swap1\n      data_20f75e61dae66bd43cc4d6e74412a2a0dfc4c34b4746776eb4e12c627179461c\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11174:11179  sub96 */\n      tag_120\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11174:11260  sub96(balances[src], amount, \"Comp::_transferTokens: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11158:11171  balances[src] */\n      dup5\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11158:11166  balances */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11158:11171  balances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11158:11260  balances[src] = sub96(balances[src], amount, \"Comp::_transferTokens: transfer amount exceeds balance\") */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11292:11305  balances[dst] */\n      swap3\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11286:11366  add96(balances[dst], amount, \"Comp::_transferTokens: transfer amount overflows\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x30\n      dup1\n      dup5\n      mstore\n      tag_199\n      swap5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11292:11305  balances[dst] */\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11307:11313  amount */\n      dup6\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11286:11366  add96(balances[dst], amount, \"Comp::_transferTokens: transfer amount overflows\") */\n      swap1\n      swap2\n      swap1\n      data_838ec7826d8a7e194a0b4c14b8572b8a97cbf1ec9a1dd8f0dc2ca0dbf889365c\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11286:11291  add96 */\n      tag_200\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11286:11366  add96(balances[dst], amount, \"Comp::_transferTokens: transfer amount overflows\") */\n      jump\t// in\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11270:11283  balances[dst] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11270:11278  balances */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11270:11283  balances[dst] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11270:11366  balances[dst] = add96(balances[dst], amount, \"Comp::_transferTokens: transfer amount overflows\") */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11381:11407  Transfer(src, dst, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":2889:2928   */\n      swap4\n      dup6\n      and\n        /* \"#utility.yul\":2871:2929   */\n      dup5\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11270:11283  balances[dst] */\n      swap1\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11381:11407  Transfer(src, dst, amount) */\n      swap2\n      dup7\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":2844:2862   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11381:11407  Transfer(src, dst, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11433:11447  delegates[src] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11433:11442  delegates */\n      0x02\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11433:11447  delegates[src] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11449:11463  delegates[dst] */\n      dup6\n      dup5\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11418:11472  _moveDelegates(delegates[src], delegates[dst], amount) */\n      tag_202\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11433:11447  delegates[src] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11449:11463  delegates[dst] */\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11465:11471  amount */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11418:11432  _moveDelegates */\n      tag_203\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11418:11472  _moveDelegates(delegates[src], delegates[dst], amount) */\n      jump\t// in\n    tag_202:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10874:11479  function _transferTokens(address src, address dst, uint96 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10501:10868  function _delegate(address delegator, address delegatee) internal {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10603:10623  delegates[delegator] */\n      dup1\n      dup4\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10577:10600  address currentDelegate */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10603:10623  delegates[delegator] */\n      dup2\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10603:10612  delegates */\n      0x02\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10603:10623  delegates[delegator] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10659:10678  balances[delegator] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n      sload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10688:10708  delegates[delegator] */\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10688:10720  delegates[delegator] = delegatee */\n      dup8\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10736:10790  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10603:10623  delegates[delegator] */\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10659:10678  balances[delegator] */\n      swap1\n      swap3\n      and\n      swap4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10688:10720  delegates[delegator] = delegatee */\n      swap2\n      swap3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10603:10623  delegates[delegator] */\n      dup6\n      swap3\n      swap2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10736:10790  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10577:10600  address currentDelegate */\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10736:10790  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10801:10861  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_205\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10816:10831  currentDelegate */\n      dup3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10833:10842  delegatee */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10844:10860  delegatorBalance */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10801:10815  _moveDelegates */\n      tag_203\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10801:10861  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_205:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10567:10868  {... */\n      pop\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":10501:10868  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13366:13550  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_200:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13452:13458  uint96 */\n      0x00\n      dup1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13481:13486  a + b */\n      tag_208\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13485:13486  b */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13481:13482  a */\n      dup7\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13481:13486  a + b */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13470:13486  uint96 c = a + b */\n      swap1\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13509:13510  a */\n      dup5\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13504:13510  c >= a */\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13504:13505  c */\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13504:13510  c >= a */\n      and\n      lt\n      iszero\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13512:13524  errorMessage */\n      dup4\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13496:13525  require(c >= a, errorMessage) */\n      swap1\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_210:\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13542:13543  c */\n      swap5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13366:13550  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11485:12408  function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {... */\n    tag_203:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11589:11595  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11579:11595  srcRep != dstRep */\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11579:11585  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11579:11595  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11579:11609  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_213\n      jumpi\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11608:11609  0 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11599:11605  amount */\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11599:11609  amount > 0 */\n      and\n      gt\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11579:11609  srcRep != dstRep && amount > 0 */\n    tag_213:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11575:12402  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_202\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11629:11649  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11625:12002  if (srcRep != address(0)) {... */\n      tag_215\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11688:11710  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11669:11685  uint32 srcRepNum */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11688:11710  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11688:11702  numCheckpoints */\n      0x04\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11688:11710  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11747:11760  srcRepNum > 0 */\n      dup2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11747:11807  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_216\n      jumpi\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11806:11807  0 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11747:11807  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_217)\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11763:11782  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11763:11774  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11763:11782  checkpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11783:11796  srcRepNum - 1 */\n      tag_218\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11795:11796  1 */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11783:11792  srcRepNum */\n      dup6\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11783:11796  srcRepNum - 1 */\n      tag_134\n      jump\t// in\n    tag_218:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11763:11797  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11763:11803  checkpoints[srcRep][srcRepNum - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11747:11807  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_217:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11728:11807  uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11825:11841  uint96 srcRepNew */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11844:11912  sub96(srcRepOld, amount, \"Comp::_moveVotes: vote amount underflows\") */\n      tag_219\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11850:11859  srcRepOld */\n      dup3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11861:11867  amount */\n      dup6\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11844:11912  sub96(srcRepOld, amount, \"Comp::_moveVotes: vote amount underflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_79bf2f3c2009651b33d37efb8a65657c3e203b2c36f61068863922cb9e64a77a\n      0x28\n      swap2\n      codecopy\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11844:11849  sub96 */\n      tag_120\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11844:11912  sub96(srcRepOld, amount, \"Comp::_moveVotes: vote amount underflows\") */\n      jump\t// in\n    tag_219:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11825:11912  uint96 srcRepNew = sub96(srcRepOld, amount, \"Comp::_moveVotes: vote amount underflows\") */\n      swap1\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11930:11987  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_220\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11947:11953  srcRep */\n      dup7\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11955:11964  srcRepNum */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11966:11975  srcRepOld */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11977:11986  srcRepNew */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11930:11946  _writeCheckpoint */\n      tag_221\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11930:11987  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_220:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11651:12002  {... */\n      pop\n      pop\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":11625:12002  if (srcRep != address(0)) {... */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12020:12040  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12016:12392  if (dstRep != address(0)) {... */\n      tag_202\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12079:12101  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12060:12076  uint32 dstRepNum */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12079:12101  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12079:12093  numCheckpoints */\n      0x04\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12079:12101  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12138:12151  dstRepNum > 0 */\n      dup2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12138:12198  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_223\n      jumpi\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12197:12198  0 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12138:12198  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_224)\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12154:12173  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12154:12165  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12154:12173  checkpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12174:12187  dstRepNum - 1 */\n      tag_225\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12186:12187  1 */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12174:12183  dstRepNum */\n      dup6\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12174:12187  dstRepNum - 1 */\n      tag_134\n      jump\t// in\n    tag_225:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12154:12188  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12154:12194  checkpoints[dstRep][dstRepNum - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12138:12198  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_224:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12119:12198  uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12216:12232  uint96 dstRepNew */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12235:12302  add96(dstRepOld, amount, \"Comp::_moveVotes: vote amount overflows\") */\n      tag_226\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12241:12250  dstRepOld */\n      dup3\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12252:12258  amount */\n      dup6\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12235:12302  add96(dstRepOld, amount, \"Comp::_moveVotes: vote amount overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_cac5f7635b67aba587752f385d4aaa6fe7d1615e382cd95e6c1ae76525be695e\n      0x27\n      swap2\n      codecopy\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12235:12240  add96 */\n      tag_200\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12235:12302  add96(dstRepOld, amount, \"Comp::_moveVotes: vote amount overflows\") */\n      jump\t// in\n    tag_226:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12216:12302  uint96 dstRepNew = add96(dstRepOld, amount, \"Comp::_moveVotes: vote amount overflows\") */\n      swap1\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12320:12377  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_157\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12337:12343  dstRep */\n      dup6\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12345:12354  dstRepNum */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12356:12365  dstRepOld */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12367:12376  dstRepNew */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12414:13032  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {... */\n    tag_221:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12531:12549  uint32 blockNumber */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12552:12628  safe32(block.number, \"Comp::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_229\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12559:12571  block.number */\n      number\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12552:12628  safe32(block.number, \"Comp::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      data_6426c6c63f7c8daecf0b8a35bfe8c0f43dc9621d39cb2bf0c2cd35cc9db8742f\n      0x34\n      swap2\n      codecopy\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12552:12558  safe32 */\n      tag_230\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12552:12628  safe32(block.number, \"Comp::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_229:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12531:12628  uint32 blockNumber = safe32(block.number, \"Comp::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12656:12657  0 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12641:12653  nCheckpoints */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12641:12657  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12641:12726  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_231\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12661:12683  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12661:12672  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12661:12683  checkpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12661:12726  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      dup4\n      and\n      swap2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12684:12700  nCheckpoints - 1 */\n      tag_232\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12699:12700  1 */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12684:12696  nCheckpoints */\n      dup9\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12684:12700  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_232:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12661:12701  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12661:12711  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12661:12726  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      eq\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12641:12726  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_231:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12637:12961  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_233\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12740:12762  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12740:12751  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12740:12762  checkpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12789:12797  newVotes */\n      dup4\n      swap2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12763:12779  nCheckpoints - 1 */\n      tag_234\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12778:12779  1 */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12763:12775  nCheckpoints */\n      dup9\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12763:12779  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_234:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12740:12780  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12740:12797  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup1\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      shl(0x20, 0x01)\n      mul\n      not(0xffffffffffffffffffffffff00000000)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12637:12961  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_235)\n    tag_233:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12863:12896  Checkpoint(blockNumber, newVotes) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup1\n      dup5\n      and\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12824:12846  checkpoints[delegatee] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12824:12835  checkpoints */\n      0x03\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12824:12846  checkpoints[delegatee] */\n      dup3\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12824:12860  checkpoints[delegatee][nCheckpoints] */\n      dup12\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      swap2\n      mstore\n      swap5\n      swap1\n      swap5\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12824:12896  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      swap3\n      mload\n      dup4\n      sload\n      swap5\n      mload\n      swap1\n      swap2\n      and\n      shl(0x20, 0x01)\n      mul\n      not(0xffffffffffffffffffffffffffffffff)\n      swap1\n      swap5\n      and\n      swap2\n      and\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12936:12952  nCheckpoints + 1 */\n      tag_236\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12847:12859  nCheckpoints */\n      dup5\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12824:12896  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      0x01\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12936:12952  nCheckpoints + 1 */\n      tag_237\n      jump\t// in\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12908:12933  numCheckpoints[delegatee] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12908:12922  numCheckpoints */\n      0x04\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12908:12933  numCheckpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12908:12952  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12637:12961  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_235:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12974:13025  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0x40\n      dup1\n      mload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":10571:10586   */\n      dup1\n      dup7\n      and\n        /* \"#utility.yul\":10553:10587   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10623:10638   */\n      dup5\n      and\n        /* \"#utility.yul\":10618:10620   */\n      0x20\n        /* \"#utility.yul\":10603:10621   */\n      dup3\n      add\n        /* \"#utility.yul\":10596:10639   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12974:13025  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      dup8\n      and\n      swap2\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n      swap2\n        /* \"#utility.yul\":10481:10499   */\n      add\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12974:13025  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12523:13032  {... */\n      pop\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":12414:13032  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13038:13196  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_230:\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13113:13119  uint32 */\n      0x00\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13150:13162  errorMessage */\n      dup2\n      shl(0x20, 0x01)\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13139:13148  n < 2**32 */\n      dup5\n      lt\n        /* \"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":13131:13163  require(n < 2**32, errorMessage) */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n        /* \"#utility.yul\":14:611   */\n    tag_28:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_247:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_247)\n    tag_249:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_250:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_243:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_252:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_31:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_254:\n        /* \"#utility.yul\":962:991   */\n      tag_255\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_243\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1609:1937   */\n    tag_45:\n        /* \"#utility.yul\":1686:1692   */\n      0x00\n        /* \"#utility.yul\":1694:1700   */\n      dup1\n        /* \"#utility.yul\":1702:1708   */\n      0x00\n        /* \"#utility.yul\":1755:1757   */\n      0x60\n        /* \"#utility.yul\":1743:1752   */\n      dup5\n        /* \"#utility.yul\":1734:1741   */\n      dup7\n        /* \"#utility.yul\":1730:1753   */\n      sub\n        /* \"#utility.yul\":1726:1758   */\n      slt\n        /* \"#utility.yul\":1723:1775   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":1771:1772   */\n      0x00\n        /* \"#utility.yul\":1768:1769   */\n      dup1\n        /* \"#utility.yul\":1761:1773   */\n      revert\n        /* \"#utility.yul\":1723:1775   */\n    tag_260:\n        /* \"#utility.yul\":1794:1823   */\n      tag_261\n        /* \"#utility.yul\":1813:1822   */\n      dup5\n        /* \"#utility.yul\":1794:1823   */\n      tag_243\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1784:1823   */\n      swap3\n      pop\n        /* \"#utility.yul\":1842:1880   */\n      tag_262\n        /* \"#utility.yul\":1876:1878   */\n      0x20\n        /* \"#utility.yul\":1865:1874   */\n      dup6\n        /* \"#utility.yul\":1861:1879   */\n      add\n        /* \"#utility.yul\":1842:1880   */\n      tag_243\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1832:1880   */\n      swap2\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x40\n        /* \"#utility.yul\":1916:1925   */\n      dup5\n        /* \"#utility.yul\":1912:1930   */\n      add\n        /* \"#utility.yul\":1899:1931   */\n      calldataload\n        /* \"#utility.yul\":1889:1931   */\n      swap1\n      pop\n        /* \"#utility.yul\":1609:1937   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2131:2317   */\n    tag_54:\n        /* \"#utility.yul\":2190:2196   */\n      0x00\n        /* \"#utility.yul\":2243:2245   */\n      0x20\n        /* \"#utility.yul\":2231:2240   */\n      dup3\n        /* \"#utility.yul\":2222:2229   */\n      dup5\n        /* \"#utility.yul\":2218:2241   */\n      sub\n        /* \"#utility.yul\":2214:2246   */\n      slt\n        /* \"#utility.yul\":2211:2263   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2256:2257   */\n      dup1\n        /* \"#utility.yul\":2249:2261   */\n      revert\n        /* \"#utility.yul\":2211:2263   */\n    tag_265:\n        /* \"#utility.yul\":2282:2311   */\n      tag_155\n        /* \"#utility.yul\":2301:2310   */\n      dup3\n        /* \"#utility.yul\":2282:2311   */\n      tag_243\n      jump\t// in\n        /* \"#utility.yul\":2940:3558   */\n    tag_92:\n        /* \"#utility.yul\":3042:3048   */\n      0x00\n        /* \"#utility.yul\":3050:3056   */\n      dup1\n        /* \"#utility.yul\":3058:3064   */\n      0x00\n        /* \"#utility.yul\":3066:3072   */\n      dup1\n        /* \"#utility.yul\":3074:3080   */\n      0x00\n        /* \"#utility.yul\":3082:3088   */\n      dup1\n        /* \"#utility.yul\":3135:3138   */\n      0xc0\n        /* \"#utility.yul\":3123:3132   */\n      dup8\n        /* \"#utility.yul\":3114:3121   */\n      dup10\n        /* \"#utility.yul\":3110:3133   */\n      sub\n        /* \"#utility.yul\":3106:3139   */\n      slt\n        /* \"#utility.yul\":3103:3156   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":3152:3153   */\n      0x00\n        /* \"#utility.yul\":3149:3150   */\n      dup1\n        /* \"#utility.yul\":3142:3154   */\n      revert\n        /* \"#utility.yul\":3103:3156   */\n    tag_271:\n        /* \"#utility.yul\":3175:3204   */\n      tag_272\n        /* \"#utility.yul\":3194:3203   */\n      dup8\n        /* \"#utility.yul\":3175:3204   */\n      tag_243\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3165:3204   */\n      swap6\n      pop\n        /* \"#utility.yul\":3251:3253   */\n      0x20\n        /* \"#utility.yul\":3240:3249   */\n      dup8\n        /* \"#utility.yul\":3236:3254   */\n      add\n        /* \"#utility.yul\":3223:3255   */\n      calldataload\n        /* \"#utility.yul\":3213:3255   */\n      swap5\n      pop\n        /* \"#utility.yul\":3302:3304   */\n      0x40\n        /* \"#utility.yul\":3291:3300   */\n      dup8\n        /* \"#utility.yul\":3287:3305   */\n      add\n        /* \"#utility.yul\":3274:3306   */\n      calldataload\n        /* \"#utility.yul\":3264:3306   */\n      swap4\n      pop\n        /* \"#utility.yul\":3356:3358   */\n      0x60\n        /* \"#utility.yul\":3345:3354   */\n      dup8\n        /* \"#utility.yul\":3341:3359   */\n      add\n        /* \"#utility.yul\":3328:3360   */\n      calldataload\n        /* \"#utility.yul\":3400:3404   */\n      0xff\n        /* \"#utility.yul\":3393:3398   */\n      dup2\n        /* \"#utility.yul\":3389:3405   */\n      and\n        /* \"#utility.yul\":3382:3387   */\n      dup2\n        /* \"#utility.yul\":3379:3406   */\n      eq\n        /* \"#utility.yul\":3369:3424   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":3420:3421   */\n      0x00\n        /* \"#utility.yul\":3417:3418   */\n      dup1\n        /* \"#utility.yul\":3410:3422   */\n      revert\n        /* \"#utility.yul\":3369:3424   */\n    tag_273:\n        /* \"#utility.yul\":2940:3558   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":3495:3498   */\n      0x80\n        /* \"#utility.yul\":3480:3499   */\n      dup2\n      add\n        /* \"#utility.yul\":3467:3500   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":3547:3550   */\n      0xa0\n        /* \"#utility.yul\":3532:3551   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3519:3552   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2940:3558   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3563:3823   */\n    tag_96:\n        /* \"#utility.yul\":3631:3637   */\n      0x00\n        /* \"#utility.yul\":3639:3645   */\n      dup1\n        /* \"#utility.yul\":3692:3694   */\n      0x40\n        /* \"#utility.yul\":3680:3689   */\n      dup4\n        /* \"#utility.yul\":3671:3678   */\n      dup6\n        /* \"#utility.yul\":3667:3690   */\n      sub\n        /* \"#utility.yul\":3663:3695   */\n      slt\n        /* \"#utility.yul\":3660:3712   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":3708:3709   */\n      0x00\n        /* \"#utility.yul\":3705:3706   */\n      dup1\n        /* \"#utility.yul\":3698:3710   */\n      revert\n        /* \"#utility.yul\":3660:3712   */\n    tag_275:\n        /* \"#utility.yul\":3731:3760   */\n      tag_276\n        /* \"#utility.yul\":3750:3759   */\n      dup4\n        /* \"#utility.yul\":3731:3760   */\n      tag_243\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3721:3760   */\n      swap2\n      pop\n        /* \"#utility.yul\":3779:3817   */\n      tag_277\n        /* \"#utility.yul\":3813:3815   */\n      0x20\n        /* \"#utility.yul\":3802:3811   */\n      dup5\n        /* \"#utility.yul\":3798:3816   */\n      add\n        /* \"#utility.yul\":3779:3817   */\n      tag_243\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3769:3817   */\n      swap1\n      pop\n        /* \"#utility.yul\":3563:3823   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4178   */\n    tag_104:\n        /* \"#utility.yul\":3895:3901   */\n      0x00\n        /* \"#utility.yul\":3903:3909   */\n      dup1\n        /* \"#utility.yul\":3956:3958   */\n      0x40\n        /* \"#utility.yul\":3944:3953   */\n      dup4\n        /* \"#utility.yul\":3935:3942   */\n      dup6\n        /* \"#utility.yul\":3931:3954   */\n      sub\n        /* \"#utility.yul\":3927:3959   */\n      slt\n        /* \"#utility.yul\":3924:3976   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":3972:3973   */\n      0x00\n        /* \"#utility.yul\":3969:3970   */\n      dup1\n        /* \"#utility.yul\":3962:3974   */\n      revert\n        /* \"#utility.yul\":3924:3976   */\n    tag_279:\n        /* \"#utility.yul\":3995:4024   */\n      tag_280\n        /* \"#utility.yul\":4014:4023   */\n      dup4\n        /* \"#utility.yul\":3995:4024   */\n      tag_243\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3985:4024   */\n      swap2\n      pop\n        /* \"#utility.yul\":4074:4076   */\n      0x20\n        /* \"#utility.yul\":4063:4072   */\n      dup4\n        /* \"#utility.yul\":4059:4077   */\n      add\n        /* \"#utility.yul\":4046:4078   */\n      calldataload\n        /* \"#utility.yul\":4118:4128   */\n      0xffffffff\n        /* \"#utility.yul\":4111:4116   */\n      dup2\n        /* \"#utility.yul\":4107:4129   */\n      and\n        /* \"#utility.yul\":4100:4105   */\n      dup2\n        /* \"#utility.yul\":4097:4130   */\n      eq\n        /* \"#utility.yul\":4087:4148   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":4144:4145   */\n      0x00\n        /* \"#utility.yul\":4141:4142   */\n      dup1\n        /* \"#utility.yul\":4134:4146   */\n      revert\n        /* \"#utility.yul\":4087:4148   */\n    tag_281:\n        /* \"#utility.yul\":4167:4172   */\n      dup1\n        /* \"#utility.yul\":4157:4172   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3828:4178   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5104:5231   */\n    tag_244:\n        /* \"#utility.yul\":5165:5175   */\n      0x4e487b71\n        /* \"#utility.yul\":5160:5163   */\n      0xe0\n        /* \"#utility.yul\":5156:5176   */\n      shl\n        /* \"#utility.yul\":5153:5154   */\n      0x00\n        /* \"#utility.yul\":5146:5177   */\n      mstore\n        /* \"#utility.yul\":5196:5200   */\n      0x11\n        /* \"#utility.yul\":5193:5194   */\n      0x04\n        /* \"#utility.yul\":5186:5201   */\n      mstore\n        /* \"#utility.yul\":5220:5224   */\n      0x24\n        /* \"#utility.yul\":5217:5218   */\n      0x00\n        /* \"#utility.yul\":5210:5225   */\n      revert\n        /* \"#utility.yul\":5236:5457   */\n    tag_134:\n        /* \"#utility.yul\":5275:5279   */\n      0x00\n        /* \"#utility.yul\":5304:5314   */\n      0xffffffff\n        /* \"#utility.yul\":5364:5374   */\n      dup4\n      dup2\n      and\n      swap1\n        /* \"#utility.yul\":5334:5344   */\n      dup4\n      and\n        /* \"#utility.yul\":5386:5398   */\n      dup2\n      dup2\n      lt\n        /* \"#utility.yul\":5383:5421   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":5401:5419   */\n      tag_288\n      tag_244\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5438:5451   */\n      sub\n      swap4\n        /* \"#utility.yul\":5236:5457   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5462:5750   */\n    tag_143:\n        /* \"#utility.yul\":5501:5502   */\n      0x00\n        /* \"#utility.yul\":5527:5537   */\n      0xffffffff\n        /* \"#utility.yul\":5564:5566   */\n      dup1\n        /* \"#utility.yul\":5561:5562   */\n      dup5\n        /* \"#utility.yul\":5557:5567   */\n      and\n        /* \"#utility.yul\":5586:5589   */\n      dup1\n        /* \"#utility.yul\":5576:5710   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":5632:5642   */\n      0x4e487b71\n        /* \"#utility.yul\":5627:5630   */\n      0xe0\n        /* \"#utility.yul\":5623:5643   */\n      shl\n        /* \"#utility.yul\":5620:5621   */\n      0x00\n        /* \"#utility.yul\":5613:5644   */\n      mstore\n        /* \"#utility.yul\":5667:5671   */\n      0x12\n        /* \"#utility.yul\":5664:5665   */\n      0x04\n        /* \"#utility.yul\":5657:5672   */\n      mstore\n        /* \"#utility.yul\":5695:5699   */\n      0x24\n        /* \"#utility.yul\":5692:5693   */\n      0x00\n        /* \"#utility.yul\":5685:5700   */\n      revert\n        /* \"#utility.yul\":5576:5710   */\n    tag_290:\n        /* \"#utility.yul\":5728:5738   */\n      swap3\n      and\n        /* \"#utility.yul\":5724:5744   */\n      swap2\n      swap1\n      swap2\n      div\n      swap3\n        /* \"#utility.yul\":5462:5750   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7806:7941   */\n    tag_174:\n        /* \"#utility.yul\":7845:7848   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":7866:7883   */\n      dup3\n      eq\n        /* \"#utility.yul\":7863:7906   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":7886:7904   */\n      tag_298\n      tag_244\n      jump\t// in\n    tag_298:\n      pop\n        /* \"#utility.yul\":7933:7934   */\n      0x01\n        /* \"#utility.yul\":7922:7935   */\n      add\n      swap1\n        /* \"#utility.yul\":7806:7941   */\n      jump\t// out\n        /* \"#utility.yul\":8756:8993   */\n    tag_190:\n        /* \"#utility.yul\":8795:8799   */\n      0x00\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":8900:8910   */\n      dup4\n      dup2\n      and\n      swap1\n        /* \"#utility.yul\":8870:8880   */\n      dup4\n      and\n        /* \"#utility.yul\":8922:8934   */\n      dup2\n      dup2\n      lt\n        /* \"#utility.yul\":8919:8957   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":8937:8955   */\n      tag_288\n      tag_244\n      jump\t// in\n        /* \"#utility.yul\":9854:10098   */\n    tag_209:\n        /* \"#utility.yul\":9893:9896   */\n      0x00\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":9974:9976   */\n      dup1\n        /* \"#utility.yul\":9971:9972   */\n      dup4\n        /* \"#utility.yul\":9967:9977   */\n      and\n        /* \"#utility.yul\":10004:10006   */\n      dup2\n        /* \"#utility.yul\":10001:10002   */\n      dup6\n        /* \"#utility.yul\":9997:10007   */\n      and\n        /* \"#utility.yul\":10035:10038   */\n      dup1\n        /* \"#utility.yul\":10031:10033   */\n      dup4\n        /* \"#utility.yul\":10027:10039   */\n      sub\n        /* \"#utility.yul\":10022:10025   */\n      dup3\n        /* \"#utility.yul\":10019:10040   */\n      gt\n        /* \"#utility.yul\":10016:10063   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":10043:10061   */\n      tag_308\n      tag_244\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10079:10092   */\n      add\n      swap5\n        /* \"#utility.yul\":9854:10098   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10103:10331   */\n    tag_237:\n        /* \"#utility.yul\":10142:10145   */\n      0x00\n        /* \"#utility.yul\":10170:10180   */\n      0xffffffff\n        /* \"#utility.yul\":10207:10209   */\n      dup1\n        /* \"#utility.yul\":10204:10205   */\n      dup4\n        /* \"#utility.yul\":10200:10210   */\n      and\n        /* \"#utility.yul\":10237:10239   */\n      dup2\n        /* \"#utility.yul\":10234:10235   */\n      dup6\n        /* \"#utility.yul\":10230:10240   */\n      and\n        /* \"#utility.yul\":10268:10271   */\n      dup1\n        /* \"#utility.yul\":10264:10266   */\n      dup4\n        /* \"#utility.yul\":10260:10272   */\n      sub\n        /* \"#utility.yul\":10255:10258   */\n      dup3\n        /* \"#utility.yul\":10252:10273   */\n      gt\n        /* \"#utility.yul\":10249:10296   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":10276:10294   */\n      tag_308\n      tag_244\n      jump\t// in\n    stop\n    data_20f75e61dae66bd43cc4d6e74412a2a0dfc4c34b4746776eb4e12c627179461c 436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe 436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473\n    data_5bdeafae4aaace0ed9b7df6e60f285c9e8e84a3ceac05af6b6259bfed8e161f5 436f6d703a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473\n    data_6426c6c63f7c8daecf0b8a35bfe8c0f43dc9621d39cb2bf0c2cd35cc9db8742f 436f6d703a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_79bf2f3c2009651b33d37efb8a65657c3e203b2c36f61068863922cb9e64a77a 436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773\n    data_838ec7826d8a7e194a0b4c14b8572b8a97cbf1ec9a1dd8f0dc2ca0dbf889365c 436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773\n    data_b7ac833594da1df58fd15c3b6b55eb20762dba088c48b65ce9d522a789ff2495 436f6d703a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365\n    data_cac5f7635b67aba587752f385d4aaa6fe7d1615e382cd95e6c1ae76525be695e 436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773\n\n    auxdata: 0xa2646970667358221220a71e3d7327a98a4d3f70a0742e2cc6f83d44817adcea3ba499821ce0799bbc1a64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_130": {
									"entryPoint": null,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:488:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "410:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "420:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "455:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "390:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "401:4:1",
														"type": ""
													}
												],
												"src": "309:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x190E CODESIZE SUB DUP1 PUSH2 0x190E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH11 0x84595161401484A000000 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH2 0x97 SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x182A DUP1 PUSH2 0xE4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x1A2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x15195CDD PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x194 PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x194 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x1E4 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x151154D5 PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x194 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH2 0x40A PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x156 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x449 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x46E JUMP JUMPDEST PUSH2 0x46B DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16BA PUSH1 0x25 SWAP2 CODECOPY PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x25 DUP1 DUP5 MSTORE SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 PUSH2 0x543 SWAP3 DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x16BA SWAP1 DUP4 ADD CODECOPY PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x570 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 PUSH2 0x59A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1791 PUSH1 0x3D SWAP2 CODECOPY PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x621 DUP8 DUP8 DUP4 PUSH2 0xCE2 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x638 CALLER DUP3 PUSH2 0xF33 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A6765745072696F72566F7465733A206E6F742079657420646574 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x195C9B5A5B9959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x6CF JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP2 PUSH2 0x6F4 PUSH1 0x1 DUP6 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND GT PUSH2 0x767 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x737 PUSH1 0x1 DUP5 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 POP PUSH2 0x4E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7B0 PUSH1 0x1 DUP5 PUSH2 0x15A8 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH2 0x7D5 DUP5 DUP5 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x7E9 SWAP1 DUP4 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP6 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP8 EQ ISZERO PUSH2 0x856 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x4E7 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x86D JUMPI DUP2 SWAP4 POP PUSH2 0x87B JUMP JUMPDEST PUSH2 0x878 PUSH1 0x1 DUP4 PUSH2 0x15A8 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0x7B3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8EC DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16DF PUSH1 0x26 SWAP2 CODECOPY PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F9 CALLER DUP6 DUP4 PUSH2 0xCE2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x92E JUMPI PUSH1 0x0 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x952 PUSH1 0x1 DUP5 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x15195CDD PUSH1 0xE2 SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 DUP4 ADD MSTORE PUSH32 0x85CC825A98EC217D960F113F5F80A95D7FD18E3725D37DF428EB14F880BDFC12 DUP2 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP3 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD DUP10 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x162 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x1A2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A20696E76616C696420736967 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E6174757265 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x698 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xB96 DUP4 PUSH2 0x15FE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A20696E76616C6964206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x698 JUMP JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A207369676E61747572652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1E1C1A5C9959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x698 JUMP JUMPDEST PUSH2 0xC5C DUP2 DUP12 PUSH2 0xF33 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x60 SHL DUP5 LT PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO DUP3 SWAP1 PUSH2 0xCCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST POP PUSH2 0xCDA DUP4 DUP6 PUSH2 0x1619 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E736665722066726F6D20746865207A65726F206164647265737300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x698 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E7366657220746F20746865207A65726F2061646472657373000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x698 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x36 DUP1 DUP5 MSTORE PUSH2 0xE25 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x1684 SWAP1 DUP4 ADD CODECOPY PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x30 DUP1 DUP5 MSTORE PUSH2 0xE8D SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1761 SWAP1 DUP4 ADD CODECOPY PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP1 MLOAD SWAP4 DUP6 AND DUP5 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xF2E SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x100A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0xFB7 DUP3 DUP5 DUP4 PUSH2 0x100A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFCA DUP5 DUP7 PUSH2 0x1639 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO DUP4 SWAP1 PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1035 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0xF2E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x10FA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1075 JUMPI PUSH1 0x0 PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1099 PUSH1 0x1 DUP6 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10E8 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1739 PUSH1 0x28 SWAP2 CODECOPY PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F6 DUP7 DUP5 DUP5 DUP5 PUSH2 0x11B2 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xF2E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1135 JUMPI PUSH1 0x0 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1159 PUSH1 0x1 DUP6 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11A8 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17CE PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xFBD JUMP JUMPDEST SWAP1 POP PUSH2 0xC61 DUP6 DUP5 DUP5 DUP5 JUMPDEST PUSH1 0x0 PUSH2 0x11D6 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1705 PUSH1 0x34 SWAP2 CODECOPY PUSH2 0x13AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND SWAP2 PUSH2 0x1214 PUSH1 0x1 DUP9 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST ISZERO PUSH2 0x12A4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 PUSH2 0x125A PUSH1 0x1 DUP9 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP5 SWAP1 SWAP5 KECCAK256 SWAP3 MLOAD DUP4 SLOAD SWAP5 MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1324 DUP5 PUSH1 0x1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP2 SWAP1 JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13FA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x13DE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x140C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145A DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x147D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1486 DUP5 PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP PUSH2 0x1494 PUSH1 0x20 DUP6 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97A DUP3 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x14D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E1 DUP8 PUSH2 0x1422 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x153B DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH2 0x1549 PUSH1 0x20 DUP5 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156E DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x15C5 JUMPI PUSH2 0x15C5 PUSH2 0x1592 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP1 PUSH2 0x15F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1612 JUMPI PUSH2 0x1612 PUSH2 0x1592 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x15C5 JUMPI PUSH2 0x15C5 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x165B JUMPI PUSH2 0x165B PUSH2 0x1592 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x165B JUMPI PUSH2 0x165B PUSH2 0x1592 JUMP INVALID NUMBER PUSH16 0x6D703A3A5F7472616E73666572546F6B PUSH6 0x6E733A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65436F6D PUSH17 0x3A3A617070726F76653A20616D6F756E74 KECCAK256 PUSH6 0x786365656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 NUMBER PUSH16 0x6D703A3A7472616E736665723A20616D PUSH16 0x756E7420657863656564732039362062 PUSH10 0x7473436F6D703A3A5F77 PUSH19 0x697465436865636B706F696E743A20626C6F63 PUSH12 0x206E756D6265722065786365 PUSH6 0x647320333220 PUSH3 0x697473 NUMBER PUSH16 0x6D703A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E7420756E646572666C6F7773436F PUSH14 0x703A3A5F7472616E73666572546F PUSH12 0x656E733A207472616E736665 PUSH19 0x20616D6F756E74206F766572666C6F7773436F PUSH14 0x703A3A7472616E7366657246726F PUSH14 0x3A207472616E7366657220616D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E6365436F6D703A3A5F6D6F7665 JUMP PUSH16 0x7465733A20766F746520616D6F756E74 KECCAK256 PUSH16 0x766572666C6F7773A264697066735822 SLT KECCAK256 0xA7 0x1E RETURNDATASIZE PUSH20 0x27A98A4D3F70A0742E2CC6F83D44817ADCEA3BA4 SWAP10 DUP3 SHR 0xE0 PUSH26 0x9BBC1A64736F6C634300080A0033000000000000000000000000 ",
							"sourceMap": "1314:12561:0:-:0;;;3794:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3840:17:0;;;;;;:8;:17;;;;;;:39;;-1:-1:-1;;;;;;3840:39:0;1706:11;3840:39;;;;;;3894:42;;;;;;455:25:1;;;443:2;428:18;;309:177;3894:42:0;;;;;;;;3794:149;1314:12561;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;309:177::-;1314:12561:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DELEGATION_TYPEHASH_64": {
									"entryPoint": null,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DOMAIN_TYPEHASH_58": {
									"entryPoint": null,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_636": {
									"entryPoint": 3891,
									"id": 636,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_moveDelegates_815": {
									"entryPoint": 4106,
									"id": 815,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferTokens_706": {
									"entryPoint": 3298,
									"id": 706,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_writeCheckpoint_888": {
									"entryPoint": 4530,
									"id": 888,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@add96_963": {
									"entryPoint": 4029,
									"id": 963,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@allowance_147": {
									"entryPoint": null,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_204": {
									"entryPoint": 1070,
									"id": 204,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_217": {
									"entryPoint": null,
									"id": 217,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkpoints_47": {
									"entryPoint": null,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@delegateBySig_436": {
									"entryPoint": 2433,
									"id": 436,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@delegate_333": {
									"entryPoint": 1582,
									"id": 333,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@delegates_34": {
									"entryPoint": null,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getChainId_998": {
									"entryPoint": null,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrentVotes_465": {
									"entryPoint": 2307,
									"id": 465,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPriorVotes_598": {
									"entryPoint": 1595,
									"id": 598,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nonces_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@numCheckpoints_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safe32_912": {
									"entryPoint": 5034,
									"id": 912,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safe96_936": {
									"entryPoint": 3177,
									"id": 936,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub96_986": {
									"entryPoint": 3224,
									"id": 986,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_320": {
									"entryPoint": 1261,
									"id": 320,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_244": {
									"entryPoint": 2247,
									"id": 244,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint32": {
									"entryPoint": 5458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2af9d25b44c3e789cf7d12e941fc7ef1e32cecdd98da61996de7571027751bd3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e8a87756e5afc73b82eff32f16bb6b10740f4f70e3e129eab06194e30ad3059__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49387db7fef935f0f28be8b61df0527ef3c11db5acad132a74e4fb5d480e55d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_646cb63637df51b5cf3e35b8d418574ca2fa5dde981ba9f8f5779cfcbbc8a355__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6dfd73e095121fac86dfcecda88ee2e5a2c4c80da47692a4520dec08a942eef4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1f9ee8b9464145aa6c6c80f5dd3de0ed75b63050c7ed5dda64f4dfa66ae889e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32_t_uint96__to_t_uint32_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint32": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 5689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint32": {
									"entryPoint": 5581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint32": {
									"entryPoint": 5544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint96": {
									"entryPoint": 5657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10647:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:1"
															},
															"nodeType": "YulIf",
															"src": "443:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:1"
															},
															"nodeType": "YulIf",
															"src": "713:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													}
												],
												"src": "616:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:1"
															},
															"nodeType": "YulIf",
															"src": "891:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:1",
														"type": ""
													}
												],
												"src": "794:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:1",
														"type": ""
													}
												],
												"src": "1053:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:1",
														"type": ""
													}
												],
												"src": "1245:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1528:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1538:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1550:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1561:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1538:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1580:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1591:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1573:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1497:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1508:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1519:4:1",
														"type": ""
													}
												],
												"src": "1427:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1759:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1768:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1771:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1761:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1761:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1761:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1734:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1743:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1726:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:32:1"
															},
															"nodeType": "YulIf",
															"src": "1723:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1784:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1813:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1794:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1794:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1832:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1865:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1876:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1861:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1861:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1842:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1889:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1916:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1927:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1912:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1899:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1899:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1663:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1674:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1686:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1694:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1702:6:1",
														"type": ""
													}
												],
												"src": "1609:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2039:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2049:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2061:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2072:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2057:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2057:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2049:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2091:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2106:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2114:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2102:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2102:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2084:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2008:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2019:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2030:4:1",
														"type": ""
													}
												],
												"src": "1942:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2201:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2247:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2256:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2259:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2249:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2249:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2249:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2222:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2243:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2214:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2214:32:1"
															},
															"nodeType": "YulIf",
															"src": "2211:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2272:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2282:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2167:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2178:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2190:6:1",
														"type": ""
													}
												],
												"src": "2131:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2423:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2433:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2445:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2441:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2433:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2475:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2506:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2511:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2502:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2502:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2515:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2498:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2498:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2486:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2468:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2468:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2392:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2403:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2414:4:1",
														"type": ""
													}
												],
												"src": "2322:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:93:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2639:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2651:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2647:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2639:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2696:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2704:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2674:42:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2598:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2609:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2620:4:1",
														"type": ""
													}
												],
												"src": "2530:192:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2826:109:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2836:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2848:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2859:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2844:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2836:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2878:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2893:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2901:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2889:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2889:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2871:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2871:58:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2795:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2806:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2817:4:1",
														"type": ""
													}
												],
												"src": "2727:208:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3093:465:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3140:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3149:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3152:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3142:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3142:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3142:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3114:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3110:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3135:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3106:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:33:1"
															},
															"nodeType": "YulIf",
															"src": "3103:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3165:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3194:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3175:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3175:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3213:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3240:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3251:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3236:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3223:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3213:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3264:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3291:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3302:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3287:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3287:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3274:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3274:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3264:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3315:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3345:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3356:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3341:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3341:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3328:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3319:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3408:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3417:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3420:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3410:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3410:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3410:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3382:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3393:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3400:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3389:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3379:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3379:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3372:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:35:1"
															},
															"nodeType": "YulIf",
															"src": "3369:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3433:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3443:5:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3433:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3457:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3484:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3495:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3480:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3480:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3467:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:33:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3457:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3509:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3536:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3547:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3532:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3532:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3519:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:33:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3509:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3019:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3030:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3042:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3050:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3058:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3066:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3074:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3082:6:1",
														"type": ""
													}
												],
												"src": "2940:618:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3650:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3696:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3708:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3698:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3698:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3698:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3671:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3680:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3667:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3692:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3663:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3663:32:1"
															},
															"nodeType": "YulIf",
															"src": "3660:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3721:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3750:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3731:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3721:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3769:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3802:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3813:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3798:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3779:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3779:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3769:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3608:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3619:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3631:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3639:6:1",
														"type": ""
													}
												],
												"src": "3563:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3914:264:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3960:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3969:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3972:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3962:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3962:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3962:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3935:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3944:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3931:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3931:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3956:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3927:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:32:1"
															},
															"nodeType": "YulIf",
															"src": "3924:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3985:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4014:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3995:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3995:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3985:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4033:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4063:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4074:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4059:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4046:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4037:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4132:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4141:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4144:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4134:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4134:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4134:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4100:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4111:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4118:10:1",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4107:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4107:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4097:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4097:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4090:41:1"
															},
															"nodeType": "YulIf",
															"src": "4087:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4157:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4167:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4157:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3872:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3883:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3895:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3903:6:1",
														"type": ""
													}
												],
												"src": "3828:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4308:169:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4318:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4318:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4360:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4375:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4383:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4371:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4371:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4353:42:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4426:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4411:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4435:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4443:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4431:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4404:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4404:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32_t_uint96__to_t_uint32_t_uint96__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4269:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4280:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4288:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4299:4:1",
														"type": ""
													}
												],
												"src": "4183:294:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4582:109:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4592:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4604:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4600:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4600:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4592:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4634:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4649:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4657:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4645:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4645:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4627:58:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4562:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4573:4:1",
														"type": ""
													}
												],
												"src": "4482:209:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4870:229:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4887:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4898:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4880:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4880:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4880:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4921:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4932:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4917:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4937:2:1",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4910:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4960:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4971:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4956:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4956:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a6765745072696f72566f7465733a206e6f742079657420646574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4976:34:1",
																		"type": "",
																		"value": "Comp::getPriorVotes: not yet det"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4949:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4949:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5031:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5042:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5027:18:1"
																	},
																	{
																		"hexValue": "65726d696e6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5047:9:1",
																		"type": "",
																		"value": "ermined"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5066:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5078:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5089:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5074:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5074:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5066:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49387db7fef935f0f28be8b61df0527ef3c11db5acad132a74e4fb5d480e55d0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4847:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4861:4:1",
														"type": ""
													}
												],
												"src": "4696:403:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5136:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5153:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5160:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5165:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5156:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5156:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5146:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5146:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5196:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5186:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5186:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5186:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5217:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5220:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5210:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5210:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5210:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5104:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5284:173:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5294:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5304:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5298:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5323:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5338:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5341:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5334:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5334:10:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "5327:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5353:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5368:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5371:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5364:10:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "5357:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5399:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5401:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5401:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5401:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "5389:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "5394:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5386:12:1"
															},
															"nodeType": "YulIf",
															"src": "5383:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5430:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "5442:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "5447:3:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5438:13:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5430:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5266:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5269:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5275:4:1",
														"type": ""
													}
												],
												"src": "5236:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5507:243:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5517:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5527:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5521:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5546:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5561:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5564:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5557:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5557:10:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "5550:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5599:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5620:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5627:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5632:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5623:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5623:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5613:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5613:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5613:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5664:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5667:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5657:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5657:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5657:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5692:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5695:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5685:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5685:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5685:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "5586:3:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:11:1"
															},
															"nodeType": "YulIf",
															"src": "5576:134:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:25:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5732:1:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5735:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5728:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5728:10:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "5740:3:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5724:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5724:20:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5719:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5492:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5495:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5501:1:1",
														"type": ""
													}
												],
												"src": "5462:288:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5940:232:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5950:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5973:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5958:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5958:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5950:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5993:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6004:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5986:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5986:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6031:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6042:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6047:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6020:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6074:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6085:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6070:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6090:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6063:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6117:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6128:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6113:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6113:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "6137:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6153:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6158:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6149:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6149:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6162:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6145:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6145:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6133:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6106:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6106:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6106:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5885:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5896:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5904:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5912:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5920:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5931:4:1",
														"type": ""
													}
												],
												"src": "5755:417:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6362:232:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6372:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6384:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6395:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6380:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6380:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6372:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6415:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6426:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6408:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6408:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6453:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6464:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6449:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6449:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6473:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6489:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6494:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6485:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6485:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6498:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6481:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6481:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6469:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6442:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6442:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6522:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6533:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6518:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6518:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6538:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6511:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6511:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6565:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6576:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6561:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6581:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6554:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6554:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6307:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6318:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6326:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6334:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6342:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6353:4:1",
														"type": ""
													}
												],
												"src": "6177:417:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6847:144:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6864:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6873:3:1",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6878:4:1",
																				"type": "",
																				"value": "6401"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6869:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6869:14:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6857:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6857:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6857:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6904:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6909:1:1",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6900:11:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6913:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6893:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6893:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6940:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6945:2:1",
																				"type": "",
																				"value": "34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6936:12:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6950:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6929:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6929:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6966:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6977:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6982:2:1",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6973:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6973:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6966:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6815:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6820:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6828:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6839:3:1",
														"type": ""
													}
												],
												"src": "6599:392:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7177:217:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7187:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7199:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7210:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7187:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7230:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7241:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7223:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7223:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7268:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7279:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7264:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7264:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7288:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7296:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7257:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7257:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7257:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7322:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7333:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7318:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7318:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7338:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7311:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7311:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7311:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7365:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7376:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7361:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7361:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7381:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7354:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7354:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7122:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7133:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7141:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7149:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7157:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7168:4:1",
														"type": ""
													}
												],
												"src": "6996:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7573:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7590:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7601:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7583:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7583:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7624:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7635:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7620:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7640:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7613:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7613:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7674:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7659:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a64656c656761746542795369673a20696e76616c696420736967",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7679:34:1",
																		"type": "",
																		"value": "Comp::delegateBySig: invalid sig"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7652:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7652:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7745:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7730:18:1"
																	},
																	{
																		"hexValue": "6e6174757265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7750:8:1",
																		"type": "",
																		"value": "nature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7723:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7723:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7723:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7768:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7780:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7791:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7776:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7776:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7768:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2af9d25b44c3e789cf7d12e941fc7ef1e32cecdd98da61996de7571027751bd3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7550:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7564:4:1",
														"type": ""
													}
												],
												"src": "7399:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7853:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7884:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7886:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7886:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7886:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7869:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7880:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7876:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7866:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7866:17:1"
															},
															"nodeType": "YulIf",
															"src": "7863:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7915:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7926:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7933:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7915:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7845:3:1",
														"type": ""
													}
												],
												"src": "7806:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8120:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8130:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8130:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8171:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8182:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8187:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8160:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8160:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8221:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8206:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a64656c656761746542795369673a20696e76616c6964206e6f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8226:34:1",
																		"type": "",
																		"value": "Comp::delegateBySig: invalid non"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8199:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8199:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8281:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8292:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8277:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8297:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8270:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8311:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8323:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8334:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8319:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8319:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8311:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_646cb63637df51b5cf3e35b8d418574ca2fa5dde981ba9f8f5779cfcbbc8a355__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8097:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8111:4:1",
														"type": ""
													}
												],
												"src": "7946:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8523:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8540:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8551:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8533:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8574:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8585:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8570:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8590:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8563:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8563:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8563:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8613:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8624:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8609:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8609:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a64656c656761746542795369673a207369676e61747572652065",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8629:34:1",
																		"type": "",
																		"value": "Comp::delegateBySig: signature e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8602:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8602:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8602:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8684:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8695:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8680:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8680:18:1"
																	},
																	{
																		"hexValue": "787069726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8700:8:1",
																		"type": "",
																		"value": "xpired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8673:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8673:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8718:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8730:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8741:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8726:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8726:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8718:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e8a87756e5afc73b82eff32f16bb6b10740f4f70e3e129eab06194e30ad3059__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8500:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8514:4:1",
														"type": ""
													}
												],
												"src": "8349:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8804:189:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8814:36:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8824:26:1",
																"type": "",
																"value": "0xffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8818:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8859:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8874:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8877:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8870:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8870:10:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "8863:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8889:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8904:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8907:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8900:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8900:10:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "8893:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8935:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8937:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8937:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8937:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "8925:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "8930:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8922:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:12:1"
															},
															"nodeType": "YulIf",
															"src": "8919:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8966:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "8978:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "8983:3:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8974:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8974:13:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8966:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8786:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8789:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8795:4:1",
														"type": ""
													}
												],
												"src": "8756:237:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9172:250:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9182:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9182:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9234:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9219:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9239:2:1",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9212:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9212:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9273:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9258:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9278:34:1",
																		"type": "",
																		"value": "Comp::_transferTokens: cannot tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9251:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9251:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9333:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9344:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9329:18:1"
																	},
																	{
																		"hexValue": "616e736665722066726f6d20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9349:30:1",
																		"type": "",
																		"value": "ansfer from the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9322:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9322:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9389:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9401:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9412:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9397:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9397:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9389:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1f9ee8b9464145aa6c6c80f5dd3de0ed75b63050c7ed5dda64f4dfa66ae889e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9149:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9163:4:1",
														"type": ""
													}
												],
												"src": "8998:424:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9601:248:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9618:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9629:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9611:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9611:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9611:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9652:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9663:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9648:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9648:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9668:2:1",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9641:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9641:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9641:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9691:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9702:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9687:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9707:34:1",
																		"type": "",
																		"value": "Comp::_transferTokens: cannot tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9680:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9680:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9762:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9773:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9758:18:1"
																	},
																	{
																		"hexValue": "616e7366657220746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9778:28:1",
																		"type": "",
																		"value": "ansfer to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9751:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9751:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9816:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9828:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9824:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9824:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9816:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6dfd73e095121fac86dfcecda88ee2e5a2c4c80da47692a4520dec08a942eef4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9578:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9592:4:1",
														"type": ""
													}
												],
												"src": "9427:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9901:197:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9911:36:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9921:26:1",
																"type": "",
																"value": "0xffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9915:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9956:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9971:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9974:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9967:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9967:10:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "9960:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9986:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10001:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10004:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9997:10:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "9990:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10041:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10043:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10043:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10043:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "10022:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10031:2:1"
																			},
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "10035:3:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10027:12:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10019:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10019:21:1"
															},
															"nodeType": "YulIf",
															"src": "10016:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10072:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "10083:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "10088:3:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10079:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10079:13:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10072:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9884:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9887:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9893:3:1",
														"type": ""
													}
												],
												"src": "9854:244:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10150:181:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10160:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10170:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10164:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10189:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10204:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10207:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10200:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10200:10:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "10193:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10219:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10234:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10237:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10230:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10230:10:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "10223:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10274:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10276:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10276:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10276:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "10255:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10264:2:1"
																			},
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "10268:3:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10260:12:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10252:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10252:21:1"
															},
															"nodeType": "YulIf",
															"src": "10249:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10305:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "10316:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "10321:3:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10312:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10312:13:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10305:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10133:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10136:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10142:3:1",
														"type": ""
													}
												],
												"src": "10103:228:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10463:182:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10496:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10473:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10508:36:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10518:26:1",
																"type": "",
																"value": "0xffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10512:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10560:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10575:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10583:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10571:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10553:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10553:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10553:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10607:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10618:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10603:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10603:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10627:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10635:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10623:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10596:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10596:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10596:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10424:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10435:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10443:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10454:4:1",
														"type": ""
													}
												],
												"src": "10336:309:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value3 := value\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint32_t_uint96__to_t_uint32_t_uint96__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_49387db7fef935f0f28be8b61df0527ef3c11db5acad132a74e4fb5d480e55d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Comp::getPriorVotes: not yet det\")\n        mstore(add(headStart, 96), \"ermined\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint32(x, y) -> diff\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function checked_div_t_uint32(x, y) -> r\n    {\n        let _1 := 0xffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(and(x, _1), y_1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_2af9d25b44c3e789cf7d12e941fc7ef1e32cecdd98da61996de7571027751bd3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Comp::delegateBySig: invalid sig\")\n        mstore(add(headStart, 96), \"nature\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_646cb63637df51b5cf3e35b8d418574ca2fa5dde981ba9f8f5779cfcbbc8a355__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Comp::delegateBySig: invalid non\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2e8a87756e5afc73b82eff32f16bb6b10740f4f70e3e129eab06194e30ad3059__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Comp::delegateBySig: signature e\")\n        mstore(add(headStart, 96), \"xpired\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint96(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_a1f9ee8b9464145aa6c6c80f5dd3de0ed75b63050c7ed5dda64f4dfa66ae889e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Comp::_transferTokens: cannot tr\")\n        mstore(add(headStart, 96), \"ansfer from the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6dfd73e095121fac86dfcecda88ee2e5a2c4c80da47692a4520dec08a942eef4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Comp::_transferTokens: cannot tr\")\n        mstore(add(headStart, 96), \"ansfer to the zero address\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b4b5ea5711610071578063b4b5ea571461033a578063c3cda5201461034d578063dd62ed3e14610360578063e7a324dc146103a0578063f1127ed8146103c757600080fd5b806370a0823114610287578063782d6fe1146102b95780637ecebe00146102e457806395d89b4114610304578063a9059cbb1461032757600080fd5b806323b872dd116100f457806323b872dd146101c9578063313ce567146101dc578063587cde1e146101f65780635c19a95c146102375780636fcfff451461024c57600080fd5b806306fdde0314610126578063095ea7b31461015f57806318160ddd1461018257806320606b70146101a2575b600080fd5b6101496040518060400160405280600481526020016315195cdd60e21b81525081565b60405161015691906113cd565b60405180910390f35b61017261016d36600461143e565b61042e565b6040519015158152602001610156565b6101946a084595161401484a00000081565b604051908152602001610156565b6101947f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6101726101d7366004611468565b6104ed565b6101e4601281565b60405160ff9091168152602001610156565b61021f6102043660046114a4565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610156565b61024a6102453660046114a4565b61062e565b005b61027261025a3660046114a4565b60046020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610156565b6101946102953660046114a4565b6001600160a01b03166000908152600160205260409020546001600160601b031690565b6102cc6102c736600461143e565b61063b565b6040516001600160601b039091168152602001610156565b6101946102f23660046114a4565b60056020526000908152604090205481565b61014960405180604001604052806004815260200163151154d560e21b81525081565b61017261033536600461143e565b6108c7565b6102cc6103483660046114a4565b610903565b61024a61035b3660046114bf565b610981565b61019461036e36600461151f565b6001600160a01b039182166000908152602081815260408083209390941682529190915220546001600160601b031690565b6101947fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b61040a6103d5366004611552565b600360209081526000928352604080842090915290825290205463ffffffff811690600160201b90046001600160601b031682565b6040805163ffffffff90931683526001600160601b03909116602083015201610156565b60008060001983141561044957506001600160601b0361046e565b61046b836040518060600160405280602581526020016116ba60259139610c69565b90505b336000818152602081815260408083206001600160a01b0389168085529083529281902080546001600160601b0319166001600160601b03871690811790915590519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a360019150505b92915050565b6001600160a01b0383166000908152602081815260408083203380855290835281842054825160608101909352602580845291936001600160601b0390911692859261054392889291906116ba90830139610c69565b9050866001600160a01b0316836001600160a01b03161415801561057057506001600160601b0382811614155b1561061657600061059a83836040518060600160405280603d8152602001611791603d9139610c98565b6001600160a01b03898116600081815260208181526040808320948a168084529482529182902080546001600160601b0319166001600160601b0387169081179091559151918252939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b610621878783610ce2565b5060019695505050505050565b6106383382610f33565b50565b60004382106106a15760405162461bcd60e51b815260206004820152602760248201527f436f6d703a3a6765745072696f72566f7465733a206e6f742079657420646574604482015266195c9b5a5b995960ca1b60648201526084015b60405180910390fd5b6001600160a01b03831660009081526004602052604090205463ffffffff16806106cf5760009150506104e7565b6001600160a01b038416600090815260036020526040812084916106f46001856115a8565b63ffffffff90811682526020820192909252604001600020541611610767576001600160a01b0384166000908152600360205260408120906107376001846115a8565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b031691506104e79050565b6001600160a01b038416600090815260036020908152604080832083805290915290205463ffffffff168310156107a25760009150506104e7565b6000806107b06001846115a8565b90505b8163ffffffff168163ffffffff16111561088257600060026107d584846115a8565b6107df91906115cd565b6107e990836115a8565b6001600160a01b038816600090815260036020908152604080832063ffffffff858116855290835292819020815180830190925254928316808252600160201b9093046001600160601b031691810191909152919250871415610856576020015194506104e79350505050565b805163ffffffff1687111561086d5781935061087b565b6108786001836115a8565b92505b50506107b3565b506001600160a01b038516600090815260036020908152604080832063ffffffff909416835292905220546001600160601b03600160201b9091041691505092915050565b6000806108ec836040518060600160405280602681526020016116df60269139610c69565b90506108f9338583610ce2565b5060019392505050565b6001600160a01b03811660009081526004602052604081205463ffffffff168061092e57600061097a565b6001600160a01b0383166000908152600360205260408120906109526001846115a8565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b03165b9392505050565b604080518082018252600481526315195cdd60e21b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc1281840152466060820152306080808301919091528351808303909101815260a0820184528051908301207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08301526001600160a01b038a1660e083015261010082018990526101208083018990528451808403909101815261014083019094528351939092019290922061190160f01b6101608401526101628301829052610182830181905290916000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610b00573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b725760405162461bcd60e51b815260206004820152602660248201527f436f6d703a3a64656c656761746542795369673a20696e76616c6964207369676044820152656e617475726560d01b6064820152608401610698565b6001600160a01b0381166000908152600560205260408120805491610b96836115fe565b919050558914610bf35760405162461bcd60e51b815260206004820152602260248201527f436f6d703a3a64656c656761746542795369673a20696e76616c6964206e6f6e604482015261636560f01b6064820152608401610698565b87421115610c525760405162461bcd60e51b815260206004820152602660248201527f436f6d703a3a64656c656761746542795369673a207369676e617475726520656044820152651e1c1a5c995960d21b6064820152608401610698565b610c5c818b610f33565b505050505b505050505050565b600081600160601b8410610c905760405162461bcd60e51b815260040161069891906113cd565b509192915050565b6000836001600160601b0316836001600160601b031611158290610ccf5760405162461bcd60e51b815260040161069891906113cd565b50610cda8385611619565b949350505050565b6001600160a01b038316610d5e5760405162461bcd60e51b815260206004820152603c60248201527f436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747260448201527f616e736665722066726f6d20746865207a65726f2061646472657373000000006064820152608401610698565b6001600160a01b038216610dda5760405162461bcd60e51b815260206004820152603a60248201527f436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747260448201527f616e7366657220746f20746865207a65726f20616464726573730000000000006064820152608401610698565b6001600160a01b038316600090815260016020908152604091829020548251606081019093526036808452610e25936001600160601b03909216928592919061168490830139610c98565b6001600160a01b03848116600090815260016020908152604080832080546001600160601b0319166001600160601b03968716179055928616825290829020548251606081019093526030808452610e8d949190911692859290919061176190830139610fbd565b6001600160a01b0383811660008181526001602090815260409182902080546001600160601b0319166001600160601b03968716179055905193851684529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36001600160a01b03808416600090815260026020526040808220548584168352912054610f2e9291821691168361100a565b505050565b6001600160a01b03808316600081815260026020818152604080842080546001845282862054949093528787166001600160a01b031984168117909155905191909516946001600160601b039092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610fb782848361100a565b50505050565b600080610fca8486611639565b9050846001600160601b0316816001600160601b0316101583906110015760405162461bcd60e51b815260040161069891906113cd565b50949350505050565b816001600160a01b0316836001600160a01b03161415801561103557506000816001600160601b0316115b15610f2e576001600160a01b038316156110fa576001600160a01b03831660009081526004602052604081205463ffffffff1690816110755760006110c1565b6001600160a01b0385166000908152600360205260408120906110996001856115a8565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b03165b905060006110e8828560405180606001604052806028815260200161173960289139610c98565b90506110f6868484846111b2565b5050505b6001600160a01b03821615610f2e576001600160a01b03821660009081526004602052604081205463ffffffff169081611135576000611181565b6001600160a01b0384166000908152600360205260408120906111596001856115a8565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b03165b905060006111a882856040518060600160405280602781526020016117ce60279139610fbd565b9050610c61858484845b60006111d643604051806060016040528060348152602001611705603491396113aa565b905060008463ffffffff1611801561123057506001600160a01b038516600090815260036020526040812063ffffffff8316916112146001886115a8565b63ffffffff908116825260208201929092526040016000205416145b156112a4576001600160a01b0385166000908152600360205260408120839161125a6001886115a8565b63ffffffff168152602081019190915260400160002080546001600160601b0392909216600160201b026fffffffffffffffffffffffff0000000019909216919091179055611355565b60408051808201825263ffffffff80841682526001600160601b0380861660208085019182526001600160a01b038b166000908152600382528681208b8616825290915294909420925183549451909116600160201b026fffffffffffffffffffffffffffffffff19909416911617919091179055611324846001611664565b6001600160a01b0386166000908152600460205260409020805463ffffffff191663ffffffff929092169190911790555b604080516001600160601b038086168252841660208201526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b600081600160201b8410610c905760405162461bcd60e51b815260040161069891905b600060208083528351808285015260005b818110156113fa578581018301518582016040015282016113de565b8181111561140c576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461143957600080fd5b919050565b6000806040838503121561145157600080fd5b61145a83611422565b946020939093013593505050565b60008060006060848603121561147d57600080fd5b61148684611422565b925061149460208501611422565b9150604084013590509250925092565b6000602082840312156114b657600080fd5b61097a82611422565b60008060008060008060c087890312156114d857600080fd5b6114e187611422565b95506020870135945060408701359350606087013560ff8116811461150557600080fd5b9598949750929560808101359460a0909101359350915050565b6000806040838503121561153257600080fd5b61153b83611422565b915061154960208401611422565b90509250929050565b6000806040838503121561156557600080fd5b61156e83611422565b9150602083013563ffffffff8116811461158757600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff838116908316818110156115c5576115c5611592565b039392505050565b600063ffffffff808416806115f257634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600060001982141561161257611612611592565b5060010190565b60006001600160601b03838116908316818110156115c5576115c5611592565b60006001600160601b0380831681851680830382111561165b5761165b611592565b01949350505050565b600063ffffffff80831681851680830382111561165b5761165b61159256fe436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473436f6d703a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473436f6d703a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773436f6d703a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773a2646970667358221220a71e3d7327a98a4d3f70a0742e2cc6f83d44817adcea3ba499821ce0799bbc1a64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x1A2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x15195CDD PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x194 PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x194 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x1E4 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x151154D5 PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x143E JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x194 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH2 0x40A PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x156 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x449 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x46E JUMP JUMPDEST PUSH2 0x46B DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16BA PUSH1 0x25 SWAP2 CODECOPY PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x25 DUP1 DUP5 MSTORE SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 PUSH2 0x543 SWAP3 DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x16BA SWAP1 DUP4 ADD CODECOPY PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x570 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 PUSH2 0x59A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1791 PUSH1 0x3D SWAP2 CODECOPY PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x621 DUP8 DUP8 DUP4 PUSH2 0xCE2 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x638 CALLER DUP3 PUSH2 0xF33 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A6765745072696F72566F7465733A206E6F742079657420646574 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x195C9B5A5B9959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x6CF JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP2 PUSH2 0x6F4 PUSH1 0x1 DUP6 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND GT PUSH2 0x767 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x737 PUSH1 0x1 DUP5 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 POP PUSH2 0x4E7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7B0 PUSH1 0x1 DUP5 PUSH2 0x15A8 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH2 0x7D5 DUP5 DUP5 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x7E9 SWAP1 DUP4 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP6 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP8 EQ ISZERO PUSH2 0x856 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x4E7 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x86D JUMPI DUP2 SWAP4 POP PUSH2 0x87B JUMP JUMPDEST PUSH2 0x878 PUSH1 0x1 DUP4 PUSH2 0x15A8 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0x7B3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8EC DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16DF PUSH1 0x26 SWAP2 CODECOPY PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F9 CALLER DUP6 DUP4 PUSH2 0xCE2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x92E JUMPI PUSH1 0x0 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x952 PUSH1 0x1 DUP5 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x15195CDD PUSH1 0xE2 SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 DUP4 ADD MSTORE PUSH32 0x85CC825A98EC217D960F113F5F80A95D7FD18E3725D37DF428EB14F880BDFC12 DUP2 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP3 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD DUP10 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x162 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x1A2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A20696E76616C696420736967 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E6174757265 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x698 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xB96 DUP4 PUSH2 0x15FE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A20696E76616C6964206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x698 JUMP JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A207369676E61747572652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1E1C1A5C9959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x698 JUMP JUMPDEST PUSH2 0xC5C DUP2 DUP12 PUSH2 0xF33 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x60 SHL DUP5 LT PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO DUP3 SWAP1 PUSH2 0xCCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST POP PUSH2 0xCDA DUP4 DUP6 PUSH2 0x1619 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E736665722066726F6D20746865207A65726F206164647265737300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x698 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E7366657220746F20746865207A65726F2061646472657373000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x698 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x36 DUP1 DUP5 MSTORE PUSH2 0xE25 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x1684 SWAP1 DUP4 ADD CODECOPY PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x30 DUP1 DUP5 MSTORE PUSH2 0xE8D SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1761 SWAP1 DUP4 ADD CODECOPY PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP1 MLOAD SWAP4 DUP6 AND DUP5 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xF2E SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x100A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0xFB7 DUP3 DUP5 DUP4 PUSH2 0x100A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFCA DUP5 DUP7 PUSH2 0x1639 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO DUP4 SWAP1 PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1035 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0xF2E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x10FA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1075 JUMPI PUSH1 0x0 PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1099 PUSH1 0x1 DUP6 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10E8 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1739 PUSH1 0x28 SWAP2 CODECOPY PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F6 DUP7 DUP5 DUP5 DUP5 PUSH2 0x11B2 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xF2E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1135 JUMPI PUSH1 0x0 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1159 PUSH1 0x1 DUP6 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11A8 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17CE PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xFBD JUMP JUMPDEST SWAP1 POP PUSH2 0xC61 DUP6 DUP5 DUP5 DUP5 JUMPDEST PUSH1 0x0 PUSH2 0x11D6 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1705 PUSH1 0x34 SWAP2 CODECOPY PUSH2 0x13AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND SWAP2 PUSH2 0x1214 PUSH1 0x1 DUP9 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST ISZERO PUSH2 0x12A4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 PUSH2 0x125A PUSH1 0x1 DUP9 PUSH2 0x15A8 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP5 SWAP1 SWAP5 KECCAK256 SWAP3 MLOAD DUP4 SLOAD SWAP5 MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1324 DUP5 PUSH1 0x1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP2 SWAP1 JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13FA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x13DE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x140C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145A DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x147D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1486 DUP5 PUSH2 0x1422 JUMP JUMPDEST SWAP3 POP PUSH2 0x1494 PUSH1 0x20 DUP6 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97A DUP3 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x14D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E1 DUP8 PUSH2 0x1422 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x153B DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH2 0x1549 PUSH1 0x20 DUP5 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156E DUP4 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x15C5 JUMPI PUSH2 0x15C5 PUSH2 0x1592 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP1 PUSH2 0x15F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1612 JUMPI PUSH2 0x1612 PUSH2 0x1592 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x15C5 JUMPI PUSH2 0x15C5 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x165B JUMPI PUSH2 0x165B PUSH2 0x1592 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x165B JUMPI PUSH2 0x165B PUSH2 0x1592 JUMP INVALID NUMBER PUSH16 0x6D703A3A5F7472616E73666572546F6B PUSH6 0x6E733A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65436F6D PUSH17 0x3A3A617070726F76653A20616D6F756E74 KECCAK256 PUSH6 0x786365656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 NUMBER PUSH16 0x6D703A3A7472616E736665723A20616D PUSH16 0x756E7420657863656564732039362062 PUSH10 0x7473436F6D703A3A5F77 PUSH19 0x697465436865636B706F696E743A20626C6F63 PUSH12 0x206E756D6265722065786365 PUSH6 0x647320333220 PUSH3 0x697473 NUMBER PUSH16 0x6D703A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E7420756E646572666C6F7773436F PUSH14 0x703A3A5F7472616E73666572546F PUSH12 0x656E733A207472616E736665 PUSH19 0x20616D6F756E74206F766572666C6F7773436F PUSH14 0x703A3A7472616E7366657246726F PUSH14 0x3A207472616E7366657220616D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E6365436F6D703A3A5F6D6F7665 JUMP PUSH16 0x7465733A20766F746520616D6F756E74 KECCAK256 PUSH16 0x766572666C6F7773A264697066735822 SLT KECCAK256 0xA7 0x1E RETURNDATASIZE PUSH20 0x27A98A4D3F70A0742E2CC6F83D44817ADCEA3BA4 SWAP10 DUP3 SHR 0xE0 PUSH26 0x9BBC1A64736F6C634300080A0033000000000000000000000000 ",
							"sourceMap": "1314:12561:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:36;;;;;;;;;;;;;;;-1:-1:-1;;;1383:36:0;;;;;;;;;;;;:::i;:::-;;;;;;;;4841:419;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;4841:419:0;1053:187:1;1671:46:0;;1706:11;1671:46;;;;;1391:25:1;;;1379:2;1364:18;1671:46:0;1245:177:1;2577:122:0;;2619:80;2577:122;;6353:664;;;;;;:::i;:::-;;:::i;1575:35::-;;1608:2;1575:35;;;;;2114:4:1;2102:17;;;2084:36;;2072:2;2057:18;1575:35:0;1942:184:1;2042:45:0;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2042:45:0;;;;;;-1:-1:-1;;;;;2486:32:1;;;2468:51;;2456:2;2441:18;2042:45:0;2322:203:1;7159:100:0;;;;;;:::i;:::-;;:::i;:::-;;2458:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2704:10:1;2692:23;;;2674:42;;2662:2;2647:18;2458:49:0;2530:192:1;5456:106:0;;;;;;:::i;:::-;-1:-1:-1;;;;;5538:17:0;5515:4;5538:17;;;:8;:17;;;;;;-1:-1:-1;;;;;5538:17:0;;5456:106;9309:1186;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2889:39:1;;;2871:58;;2859:2;2844:18;9309:1186:0;2727:208:1;2985:39:0;;;;;;:::i;:::-;;;;;;;;;;;;;;1477:38;;;;;;;;;;;;;;;-1:-1:-1;;;1477:38:0;;;;;5818:234;;;;;;:::i;:::-;;:::i;8668:219::-;;;;;;:::i;:::-;;:::i;7682:792::-;;;;;;:::i;:::-;;:::i;4239:134::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4338:19:0;;;4315:4;4338:19;;;;;;;;;;;:28;;;;;;;;;;;;-1:-1:-1;;;;;4338:28:0;;4239:134;2790:117;;2836:71;2790:117;;2322:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2322:70:0;;-1:-1:-1;;;;;2322:70:0;;;;;;;4383:10:1;4371:23;;;4353:42;;-1:-1:-1;;;;;4431:39:1;;;4426:2;4411:18;;4404:67;4326:18;2322:70:0;4183:294:1;4841:419:0;4909:4;4925:13;-1:-1:-1;;4952:9:0;:27;4948:181;;;-1:-1:-1;;;;;;4948:181:0;;;5060:58;5067:9;5060:58;;;;;;;;;;;;;;;;;:6;:58::i;:::-;5051:67;;4948:181;5150:10;5139;:22;;;;;;;;;;;-1:-1:-1;;;;;5139:31:0;;;;;;;;;;;;:40;;-1:-1:-1;;;;;;5139:40:0;-1:-1:-1;;;;;5139:40:0;;;;;;;;5195:37;;2871:58:1;;;5139:31:0;;5150:10;5195:37;;2844:18:1;5195:37:0;;;;;;;5249:4;5242:11;;;4841:419;;;;;:::o;6353:664::-;-1:-1:-1;;;;;6515:15:0;;6435:4;6515:15;;;;;;;;;;;6469:10;6515:24;;;;;;;;;;6565:58;;;;;;;;;;;;6469:10;;-1:-1:-1;;;;;6515:24:0;;;;6435:4;;6565:58;;6572:9;;6565:58;;;;;;;:6;:58::i;:::-;6549:74;;6649:3;-1:-1:-1;;;;;6638:14:0;:7;-1:-1:-1;;;;;6638:14:0;;;:54;;;;-1:-1:-1;;;;;;6656:36:0;;;;;6638:54;6634:312;;;6708:19;6730:96;6736:16;6754:6;6730:96;;;;;;;;;;;;;;;;;:5;:96::i;:::-;-1:-1:-1;;;;;6840:15:0;;;:10;:15;;;;;;;;;;;:24;;;;;;;;;;;;;:39;;-1:-1:-1;;;;;;6840:39:0;-1:-1:-1;;;;;6840:39:0;;;;;;;;6899:36;;2871:58:1;;;6840:39:0;;-1:-1:-1;6840:24:0;;:15;;6899:36;;2844:18:1;6899:36:0;;;;;;;6694:252;6634:312;6956:33;6972:3;6977;6982:6;6956:15;:33::i;:::-;-1:-1:-1;7006:4:0;;6353:664;-1:-1:-1;;;;;;6353:664:0:o;7159:100::-;7220:32;7230:10;7242:9;7220;:32::i;:::-;7159:100;:::o;9309:1186::-;9388:6;9428:12;9414:11;:26;9406:78;;;;-1:-1:-1;;;9406:78:0;;4898:2:1;9406:78:0;;;4880:21:1;4937:2;4917:18;;;4910:30;4976:34;4956:18;;;4949:62;-1:-1:-1;;;5027:18:1;;;5020:37;5074:19;;9406:78:0;;;;;;;;;-1:-1:-1;;;;;9517:23:0;;9495:19;9517:23;;;:14;:23;;;;;;;;9554:17;9550:56;;9594:1;9587:8;;;;;9550:56;-1:-1:-1;;;;;9663:20:0;;;;;;:11;:20;;;;;9715:11;;9684:16;9699:1;9684:12;:16;:::i;:::-;9663:38;;;;;;;;;;;;;;;-1:-1:-1;9663:38:0;:48;;:63;9659:145;;-1:-1:-1;;;;;9749:20:0;;;;;;:11;:20;;;;;;9770:16;9785:1;9770:12;:16;:::i;:::-;9749:38;;;;;;;;;;;;;-1:-1:-1;9749:38:0;:44;-1:-1:-1;;;9749:44:0;;-1:-1:-1;;;;;9749:44:0;;-1:-1:-1;9742:51:0;;-1:-1:-1;9742:51:0;9659:145;-1:-1:-1;;;;;9862:20:0;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;9858:86:0;;;9932:1;9925:8;;;;;9858:86;9954:12;;9995:16;10010:1;9995:12;:16;:::i;:::-;9980:31;;10021:418;10036:5;10028:13;;:5;:13;;;10021:418;;;10057:13;10099:1;10082:13;10090:5;10082;:13;:::i;:::-;10081:19;;;;:::i;:::-;10073:27;;:5;:27;:::i;:::-;-1:-1:-1;;;;;10164:20:0;;10141;10164;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;10141:51;;;;;;;;;;;;;;;-1:-1:-1;;;10141:51:0;;;-1:-1:-1;;;;;10141:51:0;;;;;;;;10164:28;;-1:-1:-1;10210:27:0;;10206:223;;;10264:8;;;;-1:-1:-1;10257:15:0;;-1:-1:-1;;;;10257:15:0;10206:223;10297:12;;:26;;;-1:-1:-1;10293:136:0;;;10351:6;10343:14;;10293:136;;;10404:10;10413:1;10404:6;:10;:::i;:::-;10396:18;;10293:136;10043:396;;10021:418;;;-1:-1:-1;;;;;;10455:20:0;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;-1:-1:-1;;;;;;;;10455:33:0;;;;;-1:-1:-1;;9309:1186:0;;;;:::o;5818:234::-;5883:4;5899:13;5915:59;5922:9;5915:59;;;;;;;;;;;;;;;;;:6;:59::i;:::-;5899:75;;5984:40;6000:10;6012:3;6017:6;5984:15;:40::i;:::-;-1:-1:-1;6041:4:0;;5818:234;-1:-1:-1;;;5818:234:0:o;8668:219::-;-1:-1:-1;;;;;8773:23:0;;8733:6;8773:23;;;:14;:23;;;;;;;;8813:16;:67;;8879:1;8813:67;;;-1:-1:-1;;;;;8832:20:0;;;;;;:11;:20;;;;;;8853:16;8868:1;8853:12;:16;:::i;:::-;8832:38;;;;;;;;;;;;;-1:-1:-1;8832:38:0;:44;-1:-1:-1;;;8832:44:0;;-1:-1:-1;;;;;8832:44:0;8813:67;8806:74;8668:219;-1:-1:-1;;;8668:219:0:o;7682:792::-;7877:4;;;;;;;;;;;-1:-1:-1;;;7877:4:0;;;;;7833:80;;2619;7833;;;5986:25:1;7861:22:0;6027:18:1;;;6020:34;13832:9:0;6070:18:1;;;6063:34;7907:4:0;6113:18:1;;;;6106:60;;;;7833:80:0;;;;;;;;;;5958:19:1;;;7833:80:0;;7823:91;;;;;;2836:71;7955:57;;;6408:25:1;-1:-1:-1;;;;;6469:32:1;;6449:18;;;6442:60;6518:18;;;6511:34;;;6561:18;;;;6554:34;;;7955:57:0;;;;;;;;;;6380:19:1;;;7955:57:0;;;7945:68;;;;;;;;;;-1:-1:-1;;;8050:57:0;;;6857:27:1;6900:11;;;6893:27;;;6936:12;;;6929:28;;;7823:91:0;;-1:-1:-1;;6973:12:1;;8050:57:0;;;-1:-1:-1;;8050:57:0;;;;;;;;;8040:68;;8050:57;8040:68;;;;8118:17;8138:26;;;;;;;;;7223:25:1;;;7296:4;7284:17;;7264:18;;;7257:45;;;;7318:18;;;7311:34;;;7361:18;;;7354:34;;;8040:68:0;;-1:-1:-1;8118:17:0;8138:26;;7195:19:1;;8138:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8138:26:0;;-1:-1:-1;;8138:26:0;;;-1:-1:-1;;;;;;;8182:23:0;;8174:74;;;;-1:-1:-1;;;8174:74:0;;7601:2:1;8174:74:0;;;7583:21:1;7640:2;7620:18;;;7613:30;7679:34;7659:18;;;7652:62;-1:-1:-1;;;7730:18:1;;;7723:36;7776:19;;8174:74:0;7399:402:1;8174:74:0;-1:-1:-1;;;;;8275:17:0;;;;;;:6;:17;;;;;:19;;;;;;:::i;:::-;;;;;8266:5;:28;8258:75;;;;-1:-1:-1;;;8258:75:0;;8148:2:1;8258:75:0;;;8130:21:1;8187:2;8167:18;;;8160:30;8226:34;8206:18;;;8199:62;-1:-1:-1;;;8277:18:1;;;8270:32;8319:19;;8258:75:0;7946:398:1;8258:75:0;8370:6;8351:15;:25;;8343:76;;;;-1:-1:-1;;;8343:76:0;;8551:2:1;8343:76:0;;;8533:21:1;8590:2;8570:18;;;8563:30;8629:34;8609:18;;;8602:62;-1:-1:-1;;;8680:18:1;;;8673:36;8726:19;;8343:76:0;8349:402:1;8343:76:0;8436:31;8446:9;8457;8436;:31::i;:::-;8429:38;;;;7682:792;;;;;;;:::o;13202:158::-;13277:6;13314:12;-1:-1:-1;;;13303:9:0;;13295:32;;;;-1:-1:-1;;;13295:32:0;;;;;;;;:::i;:::-;-1:-1:-1;13351:1:0;;13202:158;-1:-1:-1;;13202:158:0:o;13556:162::-;13642:6;13673:1;-1:-1:-1;;;;;13668:6:0;:1;-1:-1:-1;;;;;13668:6:0;;;13676:12;13660:29;;;;;-1:-1:-1;;;13660:29:0;;;;;;;;:::i;:::-;-1:-1:-1;13706:5:0;13710:1;13706;:5;:::i;:::-;13699:12;13556:162;-1:-1:-1;;;;13556:162:0:o;10874:605::-;-1:-1:-1;;;;;10967:17:0;;10959:90;;;;-1:-1:-1;;;10959:90:0;;9200:2:1;10959:90:0;;;9182:21:1;9239:2;9219:18;;;9212:30;9278:34;9258:18;;;9251:62;9349:30;9329:18;;;9322:58;9397:19;;10959:90:0;8998:424:1;10959:90:0;-1:-1:-1;;;;;11067:17:0;;11059:88;;;;-1:-1:-1;;;11059:88:0;;9629:2:1;11059:88:0;;;9611:21:1;9668:2;9648:18;;;9641:30;9707:34;9687:18;;;9680:62;9778:28;9758:18;;;9751:56;9824:19;;11059:88:0;9427:422:1;11059:88:0;-1:-1:-1;;;;;11180:13:0;;;;;;:8;:13;;;;;;;;;;11174:86;;;;;;;;;;;;;;-1:-1:-1;;;;;11180:13:0;;;;11195:6;;11174:86;;;;;;;:5;:86::i;:::-;-1:-1:-1;;;;;11158:13:0;;;;;;;:8;:13;;;;;;;;:102;;-1:-1:-1;;;;;;11158:102:0;-1:-1:-1;;;;;11158:102:0;;;;;;11292:13;;;;;;;;;;11286:80;;;;;;;;;;;;;;11292:13;;;;;11307:6;;11286:80;;;;;;;;:5;:80::i;:::-;-1:-1:-1;;;;;11270:13:0;;;;;;;:8;:13;;;;;;;;;:96;;-1:-1:-1;;;;;;11270:96:0;-1:-1:-1;;;;;11270:96:0;;;;;;11381:26;;2889:39:1;;;2871:58;;11270:13:0;;11381:26;;;;;;2844:18:1;11381:26:0;;;;;;;-1:-1:-1;;;;;11433:14:0;;;;;;;:9;:14;;;;;;;11449;;;;;;;;11418:54;;11433:14;;;;11449;11465:6;11418:14;:54::i;:::-;10874:605;;;:::o;10501:367::-;-1:-1:-1;;;;;10603:20:0;;;10577:23;10603:20;;;:9;:20;;;;;;;;;;;10659:19;;;;;;10688:20;;;;:32;;;-1:-1:-1;;;;;;10688:32:0;;;;;;;10736:54;;10603:20;;;;;-1:-1:-1;;;;;10659:19:0;;;;10688:32;;10603:20;;;10736:54;;10577:23;10736:54;10801:60;10816:15;10833:9;10844:16;10801:14;:60::i;:::-;10567:301;;10501:367;;:::o;13366:184::-;13452:6;;13481:5;13485:1;13481;:5;:::i;:::-;13470:16;;13509:1;-1:-1:-1;;;;;13504:6:0;:1;-1:-1:-1;;;;;13504:6:0;;;13512:12;13496:29;;;;;-1:-1:-1;;;13496:29:0;;;;;;;;:::i;:::-;-1:-1:-1;13542:1:0;13366:184;-1:-1:-1;;;;13366:184:0:o;11485:923::-;11589:6;-1:-1:-1;;;;;11579:16:0;:6;-1:-1:-1;;;;;11579:16:0;;;:30;;;;;11608:1;11599:6;-1:-1:-1;;;;;11599:10:0;;11579:30;11575:827;;;-1:-1:-1;;;;;11629:20:0;;;11625:377;;-1:-1:-1;;;;;11688:22:0;;11669:16;11688:22;;;:14;:22;;;;;;;;;11747:13;:60;;11806:1;11747:60;;;-1:-1:-1;;;;;11763:19:0;;;;;;:11;:19;;;;;;11783:13;11795:1;11783:9;:13;:::i;:::-;11763:34;;;;;;;;;;;;;-1:-1:-1;11763:34:0;:40;-1:-1:-1;;;11763:40:0;;-1:-1:-1;;;;;11763:40:0;11747:60;11728:79;;11825:16;11844:68;11850:9;11861:6;11844:68;;;;;;;;;;;;;;;;;:5;:68::i;:::-;11825:87;;11930:57;11947:6;11955:9;11966;11977;11930:16;:57::i;:::-;11651:351;;;11625:377;-1:-1:-1;;;;;12020:20:0;;;12016:376;;-1:-1:-1;;;;;12079:22:0;;12060:16;12079:22;;;:14;:22;;;;;;;;;12138:13;:60;;12197:1;12138:60;;;-1:-1:-1;;;;;12154:19:0;;;;;;:11;:19;;;;;;12174:13;12186:1;12174:9;:13;:::i;:::-;12154:34;;;;;;;;;;;;;-1:-1:-1;12154:34:0;:40;-1:-1:-1;;;12154:40:0;;-1:-1:-1;;;;;12154:40:0;12138:60;12119:79;;12216:16;12235:67;12241:9;12252:6;12235:67;;;;;;;;;;;;;;;;;:5;:67::i;:::-;12216:86;;12320:57;12337:6;12345:9;12356;12367;12414:618;12531:18;12552:76;12559:12;12552:76;;;;;;;;;;;;;;;;;:6;:76::i;:::-;12531:97;;12656:1;12641:12;:16;;;:85;;;;-1:-1:-1;;;;;;12661:22:0;;;;;;:11;:22;;;;;:65;;;;12684:16;12699:1;12684:12;:16;:::i;:::-;12661:40;;;;;;;;;;;;;;;-1:-1:-1;12661:40:0;:50;;:65;12641:85;12637:324;;;-1:-1:-1;;;;;12740:22:0;;;;;;:11;:22;;;;;12789:8;;12763:16;12778:1;12763:12;:16;:::i;:::-;12740:40;;;;;;;;;;;;;-1:-1:-1;12740:40:0;:57;;-1:-1:-1;;;;;12740:57:0;;;;-1:-1:-1;;;12740:57:0;-1:-1:-1;;12740:57:0;;;;;;;;;12637:324;;;12863:33;;;;;;;;;;;;;;-1:-1:-1;;;;;12863:33:0;;;;;;;;;;-1:-1:-1;;;;;12824:22:0;;-1:-1:-1;12824:22:0;;;:11;:22;;;;;:36;;;;;;;;;;;;:72;;;;;;;;;-1:-1:-1;;;12824:72:0;-1:-1:-1;;12824:72:0;;;;;;;;;;;;12936:16;12847:12;12824:72;12936:16;:::i;:::-;-1:-1:-1;;;;;12908:25:0;;;;;;:14;:25;;;;;:44;;-1:-1:-1;;12908:44:0;;;;;;;;;;;;12637:324;12974:51;;;-1:-1:-1;;;;;10571:15:1;;;10553:34;;10623:15;;10618:2;10603:18;;10596:43;-1:-1:-1;;;;;12974:51:0;;;;;10481:18:1;12974:51:0;;;;;;;12523:509;12414:618;;;;:::o;13038:158::-;13113:6;13150:12;-1:-1:-1;;;13139:9:0;;13131:32;;;;-1:-1:-1;;;13131:32:0;;;;;;;14:597:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1609:328::-;1686:6;1694;1702;1755:2;1743:9;1734:7;1730:23;1726:32;1723:52;;;1771:1;1768;1761:12;1723:52;1794:29;1813:9;1794:29;:::i;:::-;1784:39;;1842:38;1876:2;1865:9;1861:18;1842:38;:::i;:::-;1832:48;;1927:2;1916:9;1912:18;1899:32;1889:42;;1609:328;;;;;:::o;2131:186::-;2190:6;2243:2;2231:9;2222:7;2218:23;2214:32;2211:52;;;2259:1;2256;2249:12;2211:52;2282:29;2301:9;2282:29;:::i;2940:618::-;3042:6;3050;3058;3066;3074;3082;3135:3;3123:9;3114:7;3110:23;3106:33;3103:53;;;3152:1;3149;3142:12;3103:53;3175:29;3194:9;3175:29;:::i;:::-;3165:39;;3251:2;3240:9;3236:18;3223:32;3213:42;;3302:2;3291:9;3287:18;3274:32;3264:42;;3356:2;3345:9;3341:18;3328:32;3400:4;3393:5;3389:16;3382:5;3379:27;3369:55;;3420:1;3417;3410:12;3369:55;2940:618;;;;-1:-1:-1;2940:618:1;;3495:3;3480:19;;3467:33;;3547:3;3532:19;;;3519:33;;-1:-1:-1;2940:618:1;-1:-1:-1;;2940:618:1:o;3563:260::-;3631:6;3639;3692:2;3680:9;3671:7;3667:23;3663:32;3660:52;;;3708:1;3705;3698:12;3660:52;3731:29;3750:9;3731:29;:::i;:::-;3721:39;;3779:38;3813:2;3802:9;3798:18;3779:38;:::i;:::-;3769:48;;3563:260;;;;;:::o;3828:350::-;3895:6;3903;3956:2;3944:9;3935:7;3931:23;3927:32;3924:52;;;3972:1;3969;3962:12;3924:52;3995:29;4014:9;3995:29;:::i;:::-;3985:39;;4074:2;4063:9;4059:18;4046:32;4118:10;4111:5;4107:22;4100:5;4097:33;4087:61;;4144:1;4141;4134:12;4087:61;4167:5;4157:15;;;3828:350;;;;;:::o;5104:127::-;5165:10;5160:3;5156:20;5153:1;5146:31;5196:4;5193:1;5186:15;5220:4;5217:1;5210:15;5236:221;5275:4;5304:10;5364;;;;5334;;5386:12;;;5383:38;;;5401:18;;:::i;:::-;5438:13;;5236:221;-1:-1:-1;;;5236:221:1:o;5462:288::-;5501:1;5527:10;5564:2;5561:1;5557:10;5586:3;5576:134;;5632:10;5627:3;5623:20;5620:1;5613:31;5667:4;5664:1;5657:15;5695:4;5692:1;5685:15;5576:134;5728:10;;5724:20;;;;;5462:288;-1:-1:-1;;5462:288:1:o;7806:135::-;7845:3;-1:-1:-1;;7866:17:1;;7863:43;;;7886:18;;:::i;:::-;-1:-1:-1;7933:1:1;7922:13;;7806:135::o;8756:237::-;8795:4;-1:-1:-1;;;;;8900:10:1;;;;8870;;8922:12;;;8919:38;;;8937:18;;:::i;9854:244::-;9893:3;-1:-1:-1;;;;;9974:2:1;9971:1;9967:10;10004:2;10001:1;9997:10;10035:3;10031:2;10027:12;10022:3;10019:21;10016:47;;;10043:18;;:::i;:::-;10079:13;;9854:244;-1:-1:-1;;;;9854:244:1:o;10103:228::-;10142:3;10170:10;10207:2;10204:1;10200:10;10237:2;10234:1;10230:10;10268:3;10264:2;10260:12;10255:3;10252:21;10249:47;;;10276:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1237200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "283",
								"DOMAIN_TYPEHASH()": "285",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2578",
								"checkpoints(address,uint32)": "2856",
								"decimals()": "249",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "2625",
								"getCurrentVotes(address)": "infinite",
								"getPriorVotes(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2586",
								"numCheckpoints(address)": "2645",
								"symbol()": "infinite",
								"totalSupply()": "263",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint96)": "infinite",
								"_transferTokens(address,address,uint96)": "infinite",
								"_writeCheckpoint(address,uint32,uint96,uint96)": "infinite",
								"add96(uint96,uint96,string memory)": "infinite",
								"getChainId()": "infinite",
								"safe32(uint256,string memory)": "infinite",
								"safe96(uint256,string memory)": "infinite",
								"sub96(uint96,uint96,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1314,
									"end": 13875,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3848,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3857,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1706,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "84595161401484A000000"
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3840,
									"end": 3879,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 455,
									"end": 480,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 455,
									"end": 480,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 455,
									"end": 480,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 445,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 428,
									"end": 446,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 486,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3894,
									"end": 3936,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3794,
									"end": 3943,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 309,
									"end": 486,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 309,
									"end": 486,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1314,
									"end": 13875,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a71e3d7327a98a4d3f70a0742e2cc6f83d44817adcea3ba499821ce0799bbc1a64736f6c634300080a0033",
									".code": [
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "B4B5EA57"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "B4B5EA57"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "C3CDA520"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "E7A324DC"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "F1127ED8"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "782D6FE1"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "587CDE1E"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "6FCFFF45"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "20606B70"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 13875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15195CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1419,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1717,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1671,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1706,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "84595161401484A000000"
										},
										{
											"begin": 1671,
											"end": 1717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1717,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1717,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1671,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2699,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2577,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2619,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 2577,
											"end": 2699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2699,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1608,
											"end": 1610,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2114,
											"end": 2118,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2057,
											"end": 2075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1942,
											"end": 2126,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2322,
											"end": 2525,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2692,
											"end": 2715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2530,
											"end": 2722,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5456,
											"end": 5562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2889,
											"end": 2928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2844,
											"end": 2862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3024,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151154D5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1515,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4373,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2907,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2790,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2836,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 2790,
											"end": 2907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4393,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4371,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4394,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4394,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4431,
											"end": 4470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4470,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4426,
											"end": 4428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4183,
											"end": 4477,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4909,
											"end": 4913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4952,
											"end": 4979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4948,
											"end": 5129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4948,
											"end": 5129,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5129,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4948,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5067,
											"end": 5076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "PUSH data",
											"source": 0,
											"value": "32DAB9ECE0397C38C85244ED755F6110088FB13D43A7E9D6809DA7619813D0FE"
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5060,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5051,
											"end": 5118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5051,
											"end": 5118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 5129,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4948,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5150,
											"end": 5160,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5179,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5139,
											"end": 5170,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5150,
											"end": 5160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5232,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5242,
											"end": 5253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 5253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 5253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5260,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6435,
											"end": 6439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6479,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6479,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6539,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6435,
											"end": 6439,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6435,
											"end": 6439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6581,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "PUSH data",
											"source": 0,
											"value": "32DAB9ECE0397C38C85244ED755F6110088FB13D43A7E9D6809DA7619813D0FE"
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6565,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6652,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6638,
											"end": 6652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6638,
											"end": 6645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6638,
											"end": 6652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6638,
											"end": 6652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6638,
											"end": 6652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6638,
											"end": 6692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6638,
											"end": 6692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6638,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6638,
											"end": 6692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6638,
											"end": 6692,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6638,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6946,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6634,
											"end": 6946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 6727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6736,
											"end": 6752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6754,
											"end": 6760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "PUSH",
											"source": 0,
											"value": "3D"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "PUSH data",
											"source": 0,
											"value": "B7AC833594DA1DF58FD15C3B6B55EB20762DBA088C48B65CE9D522A789FF2495"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "PUSH",
											"source": 0,
											"value": "3D"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6730,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6879,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6864,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6935,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6946,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6634,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6972,
											"end": 6975,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6977,
											"end": 6980,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 6988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6956,
											"end": 6989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6956,
											"end": 6989,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6956,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 7017,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7220,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7230,
											"end": 7240,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7242,
											"end": 7251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7220,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7220,
											"end": 7252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7220,
											"end": 7252,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7220,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 7259,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9440,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9440,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 4901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4937,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4917,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4917,
											"end": 4935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4917,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A6765745072696F72566F7465733A206E6F742079657420646574"
										},
										{
											"begin": 4956,
											"end": 4974,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4956,
											"end": 4974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 5011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C9B5A5B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5074,
											"end": 5093,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5074,
											"end": 5093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 9406,
											"end": 9484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9550,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9550,
											"end": 9606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9594,
											"end": 9595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9587,
											"end": 9595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9587,
											"end": 9595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9587,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9587,
											"end": 9595,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9550,
											"end": 9606,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9550,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9674,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9726,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9715,
											"end": 9726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9684,
											"end": 9700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9699,
											"end": 9700,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9684,
											"end": 9696,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9684,
											"end": 9700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 9684,
											"end": 9700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9684,
											"end": 9700,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9684,
											"end": 9700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9663,
											"end": 9701,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9726,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9659,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 9659,
											"end": 9804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9760,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9770,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 9785,
											"end": 9786,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9770,
											"end": 9782,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9770,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 9770,
											"end": 9786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9770,
											"end": 9786,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 9770,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9749,
											"end": 9793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9749,
											"end": 9793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9742,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9742,
											"end": 9793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9742,
											"end": 9793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9659,
											"end": 9804,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 9659,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9873,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9885,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9895,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9862,
											"end": 9895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 9858,
											"end": 9944,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9858,
											"end": 9944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 9933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9925,
											"end": 9933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9925,
											"end": 9933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9925,
											"end": 9933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9925,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9925,
											"end": 9933,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9944,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9858,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9954,
											"end": 9966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9954,
											"end": 9966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9995,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10010,
											"end": 10011,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9995,
											"end": 10007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9995,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 9995,
											"end": 10011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9995,
											"end": 10011,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 9995,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 10011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 10011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10021,
											"end": 10439,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10021,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10028,
											"end": 10041,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10028,
											"end": 10041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10028,
											"end": 10033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10028,
											"end": 10041,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10028,
											"end": 10041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10028,
											"end": 10041,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10021,
											"end": 10439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10021,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10021,
											"end": 10439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10057,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10099,
											"end": 10100,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10082,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10090,
											"end": 10095,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10082,
											"end": 10095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10082,
											"end": 10095,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10082,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10073,
											"end": 10100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10073,
											"end": 10100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10073,
											"end": 10100,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10073,
											"end": 10100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10175,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10184,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10141,
											"end": 10192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10164,
											"end": 10192,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10210,
											"end": 10237,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10210,
											"end": 10237,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10206,
											"end": 10429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10264,
											"end": 10272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10272,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10257,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10257,
											"end": 10272,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10257,
											"end": 10272,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10206,
											"end": 10429,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10206,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10297,
											"end": 10309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10297,
											"end": 10309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10297,
											"end": 10323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10297,
											"end": 10323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10297,
											"end": 10323,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 10293,
											"end": 10429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10293,
											"end": 10429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10293,
											"end": 10429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10357,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10293,
											"end": 10429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10293,
											"end": 10429,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10293,
											"end": 10429,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10293,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10413,
											"end": 10414,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10404,
											"end": 10410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10404,
											"end": 10414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10404,
											"end": 10414,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10404,
											"end": 10414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10396,
											"end": 10414,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10396,
											"end": 10414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10293,
											"end": 10429,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10293,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10043,
											"end": 10439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10043,
											"end": 10439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10021,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10021,
											"end": 10439,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10021,
											"end": 10439,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10021,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10466,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10455,
											"end": 10482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10482,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10482,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10482,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10455,
											"end": 10488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10488,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10455,
											"end": 10488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9309,
											"end": 10495,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5883,
											"end": 5887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5922,
											"end": 5931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "PUSH data",
											"source": 0,
											"value": "5BDEAFAE4AAACE0ED9B7DF6E60F285C9E8E84A3CEAC05AF6B6259BFED8E161F5"
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5915,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5899,
											"end": 5974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5899,
											"end": 5974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5984,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 6000,
											"end": 6010,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6015,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5984,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5984,
											"end": 6024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5984,
											"end": 6024,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5984,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6041,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6041,
											"end": 6045,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5818,
											"end": 6052,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8733,
											"end": 8739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8879,
											"end": 8880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8843,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8853,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8868,
											"end": 8869,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8853,
											"end": 8865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8853,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8853,
											"end": 8869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8853,
											"end": 8869,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8853,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8832,
											"end": 8876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8876,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8832,
											"end": 8876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8880,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8668,
											"end": 8887,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15195CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 7883,
											"name": "PUSH",
											"source": 0,
											"value": "85CC825A98EC217D960F113F5F80A95D7FD18E3725D37DF428EB14F880BDFC12"
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13841,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6131,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6113,
											"end": 6131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5958,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5958,
											"end": 5977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6469,
											"end": 6501,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6467,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6449,
											"end": 6467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6545,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6579,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6561,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6588,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6380,
											"end": 6399,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6380,
											"end": 6399,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6380,
											"end": 6399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 8012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 8013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 8013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 8013,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 8013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 8013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 8013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 8013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 8013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 8013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7945,
											"end": 8013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6857,
											"end": 6884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6911,
											"name": "PUSH",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6900,
											"end": 6911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 6948,
											"name": "PUSH",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6936,
											"end": 6948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 6948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "PUSH",
											"source": 1,
											"value": "1A2"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8040,
											"end": 8108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8108,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7284,
											"end": 7301,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7264,
											"end": 7282,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7264,
											"end": 7282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7264,
											"end": 7282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7311,
											"end": 7345,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7311,
											"end": 7345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7311,
											"end": 7345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7379,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7361,
											"end": 7379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7388,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8108,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8118,
											"end": 8135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8182,
											"end": 8205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8182,
											"end": 8205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7583,
											"end": 7604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7642,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7613,
											"end": 7643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7713,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A64656C656761746542795369673A20696E76616C696420736967"
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7730,
											"end": 7748,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7730,
											"end": 7748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7776,
											"end": 7795,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7776,
											"end": 7795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7399,
											"end": 7801,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8281,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8275,
											"end": 8294,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8271,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8148,
											"end": 8150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8130,
											"end": 8151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8187,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8160,
											"end": 8190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8260,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A64656C656761746542795369673A20696E76616C6964206E6F6E"
										},
										{
											"begin": 8206,
											"end": 8224,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8206,
											"end": 8224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8199,
											"end": 8261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8270,
											"end": 8302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8319,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8319,
											"end": 8338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7946,
											"end": 8344,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8258,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 8376,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8366,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8376,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8551,
											"end": 8553,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8533,
											"end": 8554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8590,
											"end": 8592,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8629,
											"end": 8663,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A64656C656761746542795369673A207369676E61747572652065"
										},
										{
											"begin": 8609,
											"end": 8627,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8609,
											"end": 8627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8609,
											"end": 8627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8602,
											"end": 8664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8680,
											"end": 8698,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8680,
											"end": 8698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8745,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8726,
											"end": 8745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8349,
											"end": 8751,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8446,
											"end": 8455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8466,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8436,
											"end": 8467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8436,
											"end": 8467,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8436,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 8474,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13202,
											"end": 13360,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13202,
											"end": 13360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13277,
											"end": 13283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13314,
											"end": 13326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13303,
											"end": 13312,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13303,
											"end": 13312,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13295,
											"end": 13327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13351,
											"end": 13352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13202,
											"end": 13360,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13556,
											"end": 13718,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 13556,
											"end": 13718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13642,
											"end": 13648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13673,
											"end": 13674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13668,
											"end": 13674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13668,
											"end": 13669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13668,
											"end": 13674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13668,
											"end": 13674,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13668,
											"end": 13674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13676,
											"end": 13688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 13660,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13710,
											"end": 13711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13707,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13711,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13718,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13556,
											"end": 13718,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10874,
											"end": 11479,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10874,
											"end": 11479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10967,
											"end": 10984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9200,
											"end": 9202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9182,
											"end": 9203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9241,
											"name": "PUSH",
											"source": 1,
											"value": "3C"
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9212,
											"end": 9242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9312,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472"
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9379,
											"name": "PUSH",
											"source": 1,
											"value": "616E736665722066726F6D20746865207A65726F206164647265737300000000"
										},
										{
											"begin": 9329,
											"end": 9347,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9329,
											"end": 9347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9397,
											"end": 9416,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9397,
											"end": 9416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8998,
											"end": 9422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10959,
											"end": 11049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11067,
											"end": 11084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11067,
											"end": 11084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9629,
											"end": 9631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9668,
											"end": 9670,
											"name": "PUSH",
											"source": 1,
											"value": "3A"
										},
										{
											"begin": 9648,
											"end": 9666,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9648,
											"end": 9666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9648,
											"end": 9666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9741,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472"
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9778,
											"end": 9806,
											"name": "PUSH",
											"source": 1,
											"value": "616E7366657220746F20746865207A65726F2061646472657373000000000000"
										},
										{
											"begin": 9758,
											"end": 9776,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9758,
											"end": 9776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9758,
											"end": 9776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9751,
											"end": 9807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9843,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9824,
											"end": 9843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9427,
											"end": 9849,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11188,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11193,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11201,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11195,
											"end": 11201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "PUSH data",
											"source": 0,
											"value": "20F75E61DAE66BD43CC4D6E74412A2A0DFC4C34B4746776EB4E12C627179461C"
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 11174,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11171,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11158,
											"end": 11260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11158,
											"end": 11260,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11260,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11260,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11158,
											"end": 11260,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11292,
											"end": 11305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11307,
											"end": 11313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11307,
											"end": 11313,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "PUSH data",
											"source": 0,
											"value": "838EC7826D8A7E194A0B4C14B8572B8A97CBF1EC9A1DD8F0DC2CA0DBF889365C"
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11286,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11270,
											"end": 11366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11270,
											"end": 11366,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11366,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11366,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11366,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2889,
											"end": 2928,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2928,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 2928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11270,
											"end": 11283,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11442,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11463,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11463,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11463,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11463,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11463,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11418,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11418,
											"end": 11472,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11433,
											"end": 11447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11465,
											"end": 11471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11418,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 11418,
											"end": 11472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11418,
											"end": 11472,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11418,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 11479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 11479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 11479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 11479,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10501,
											"end": 10868,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10501,
											"end": 10868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10577,
											"end": 10600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10612,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10708,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10708,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10736,
											"end": 10790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10736,
											"end": 10790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10736,
											"end": 10790,
											"name": "PUSH",
											"source": 0,
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 10736,
											"end": 10790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10577,
											"end": 10600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10736,
											"end": 10790,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 10816,
											"end": 10831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10833,
											"end": 10842,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 10801,
											"end": 10861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10801,
											"end": 10861,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 10801,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10501,
											"end": 10868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10501,
											"end": 10868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10501,
											"end": 10868,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13366,
											"end": 13550,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13366,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13452,
											"end": 13458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13452,
											"end": 13458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13481,
											"end": 13486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13485,
											"end": 13486,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13481,
											"end": 13482,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13481,
											"end": 13486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 13481,
											"end": 13486,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13481,
											"end": 13486,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13481,
											"end": 13486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13470,
											"end": 13486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13509,
											"end": 13510,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13504,
											"end": 13510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13504,
											"end": 13505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13504,
											"end": 13510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13504,
											"end": 13510,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13504,
											"end": 13510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13512,
											"end": 13524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13496,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13542,
											"end": 13543,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13550,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13366,
											"end": 13550,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11485,
											"end": 12408,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 11485,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11579,
											"end": 11595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11579,
											"end": 11595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11595,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 11579,
											"end": 11609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11608,
											"end": 11609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11599,
											"end": 11605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11599,
											"end": 11609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11609,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11609,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 11579,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 12402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11575,
											"end": 12402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 11625,
											"end": 12002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11669,
											"end": 11685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11747,
											"end": 11760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11747,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 11747,
											"end": 11807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11806,
											"end": 11807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11747,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 11747,
											"end": 11807,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11747,
											"end": 11807,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 11747,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11774,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 11795,
											"end": 11796,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11783,
											"end": 11792,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11763,
											"end": 11797,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11763,
											"end": 11803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11763,
											"end": 11803,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11763,
											"end": 11803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11747,
											"end": 11807,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 11747,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11825,
											"end": 11841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11850,
											"end": 11859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11867,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "PUSH data",
											"source": 0,
											"value": "79BF2F3C2009651B33D37EFB8A65657C3E203B2C36F61068863922CB9E64A77A"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11844,
											"end": 11912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11825,
											"end": 11912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11825,
											"end": 11912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 11947,
											"end": 11953,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11955,
											"end": 11964,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11966,
											"end": 11975,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 11986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 11930,
											"end": 11987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11930,
											"end": 11987,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 11930,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11651,
											"end": 12002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11651,
											"end": 12002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11651,
											"end": 12002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 12002,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 11625,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12020,
											"end": 12040,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12020,
											"end": 12040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12020,
											"end": 12040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12016,
											"end": 12392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 12016,
											"end": 12392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12060,
											"end": 12076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12079,
											"end": 12101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12138,
											"end": 12151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12138,
											"end": 12198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12138,
											"end": 12198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12197,
											"end": 12198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12138,
											"end": 12198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12138,
											"end": 12198,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12138,
											"end": 12198,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12138,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12165,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12186,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12174,
											"end": 12183,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12174,
											"end": 12187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12174,
											"end": 12187,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12174,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12154,
											"end": 12194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12194,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12154,
											"end": 12194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12138,
											"end": 12198,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12138,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12216,
											"end": 12232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12241,
											"end": 12250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "PUSH data",
											"source": 0,
											"value": "CAC5F7635B67ABA587752F385D4AAA6FE7D1615E382CD95E6C1AE76525BE695E"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 12235,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12235,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12216,
											"end": 12302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12216,
											"end": 12302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12337,
											"end": 12343,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12354,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12356,
											"end": 12365,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12367,
											"end": 12376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12414,
											"end": 13032,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 12414,
											"end": 13032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12531,
											"end": 12549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 12559,
											"end": 12571,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "PUSH data",
											"source": 0,
											"value": "6426C6C63F7C8DAECF0B8A35BFE8C0F43DC9621D39CB2BF0C2CD35CC9DB8742F"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 12552,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12531,
											"end": 12628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12531,
											"end": 12628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 12657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12641,
											"end": 12653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12641,
											"end": 12657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12641,
											"end": 12657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12641,
											"end": 12657,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12641,
											"end": 12726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12641,
											"end": 12726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12641,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12641,
											"end": 12726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12672,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12661,
											"end": 12726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12684,
											"end": 12700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12699,
											"end": 12700,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12684,
											"end": 12696,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12684,
											"end": 12700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12684,
											"end": 12700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12684,
											"end": 12700,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12684,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12701,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12661,
											"end": 12726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12641,
											"end": 12726,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12641,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12637,
											"end": 12961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12751,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12797,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12763,
											"end": 12779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 12778,
											"end": 12779,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12763,
											"end": 12775,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12763,
											"end": 12779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12763,
											"end": 12779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12763,
											"end": 12779,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 12763,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12740,
											"end": 12780,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12797,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 12637,
											"end": 12961,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12961,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12637,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12824,
											"end": 12846,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12824,
											"end": 12846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12835,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12824,
											"end": 12846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12846,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 12847,
											"end": 12859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12896,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12936,
											"end": 12952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 12936,
											"end": 12952,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12936,
											"end": 12952,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 12936,
											"end": 12952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12952,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12961,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 12637,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10571,
											"end": 10586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10586,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10638,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10638,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10620,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10603,
											"end": 10621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10603,
											"end": 10621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10596,
											"end": 10639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "PUSH",
											"source": 0,
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12974,
											"end": 13025,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 12523,
											"end": 13032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12414,
											"end": 13032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12414,
											"end": 13032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12414,
											"end": 13032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12414,
											"end": 13032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12414,
											"end": 13032,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13038,
											"end": 13196,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 13038,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13150,
											"end": 13162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13139,
											"end": 13148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13148,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1609,
											"end": 1937,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1609,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1741,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1753,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1758,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1723,
											"end": 1775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1773,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1775,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1723,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1813,
											"end": 1822,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1876,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1874,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1842,
											"end": 1880,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1842,
											"end": 1880,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1842,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1931,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1937,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2131,
											"end": 2317,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2131,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2231,
											"end": 2240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2263,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2211,
											"end": 2263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2261,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2211,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2282,
											"end": 2311,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2940,
											"end": 3558,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2940,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3138,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 3123,
											"end": 3132,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3114,
											"end": 3121,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3103,
											"end": 3156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3150,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3156,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3103,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3194,
											"end": 3203,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3175,
											"end": 3204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3175,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3175,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3204,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3249,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3255,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3255,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3300,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3306,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3306,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3360,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3393,
											"end": 3398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3405,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3379,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3369,
											"end": 3424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3424,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3369,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3558,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3558,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3558,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3558,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2940,
											"end": 3558,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3558,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3480,
											"end": 3499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3500,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3500,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3550,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3552,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3552,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2940,
											"end": 3558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2940,
											"end": 3558,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3563,
											"end": 3823,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3563,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3689,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3678,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3690,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3695,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3660,
											"end": 3712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3706,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3712,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3660,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3750,
											"end": 3759,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3731,
											"end": 3760,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3731,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3731,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3813,
											"end": 3815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 3811,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3779,
											"end": 3817,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3779,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3779,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3823,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3823,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3823,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3828,
											"end": 4178,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3828,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 3953,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3959,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3976,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3924,
											"end": 3976,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 3974,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3976,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3924,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4014,
											"end": 4023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3995,
											"end": 4024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4024,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3995,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4063,
											"end": 4072,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4078,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4111,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4107,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4130,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4087,
											"end": 4148,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4142,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4087,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 4178,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 4178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 4178,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 4178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 4178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 4178,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5104,
											"end": 5231,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 5104,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5160,
											"end": 5163,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5156,
											"end": 5176,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5177,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5200,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5193,
											"end": 5194,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5186,
											"end": 5201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5220,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5217,
											"end": 5218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5225,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5457,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5236,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5314,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5383,
											"end": 5421,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5401,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5401,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 5401,
											"end": 5419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5401,
											"end": 5419,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5401,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5451,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5236,
											"end": 5457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5462,
											"end": 5750,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5462,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5537,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5564,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5561,
											"end": 5562,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5589,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5627,
											"end": 5630,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5623,
											"end": 5643,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5613,
											"end": 5644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5671,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5664,
											"end": 5665,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5657,
											"end": 5672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5699,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5692,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5685,
											"end": 5700,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5576,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5750,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7806,
											"end": 7941,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7806,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7845,
											"end": 7848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7866,
											"end": 7883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7866,
											"end": 7883,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7863,
											"end": 7906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7886,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7886,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7886,
											"end": 7904,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7886,
											"end": 7904,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7886,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7933,
											"end": 7934,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7922,
											"end": 7935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7806,
											"end": 7941,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8756,
											"end": 8993,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8756,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8900,
											"end": 8910,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8900,
											"end": 8910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8900,
											"end": 8910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8900,
											"end": 8910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8880,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8934,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 8919,
											"end": 8957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 8937,
											"end": 8955,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9854,
											"end": 10098,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9854,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9974,
											"end": 9976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 9972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9967,
											"end": 9977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10001,
											"end": 10002,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9997,
											"end": 10007,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10035,
											"end": 10038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10027,
											"end": 10039,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10040,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10063,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10016,
											"end": 10063,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10043,
											"end": 10061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10043,
											"end": 10061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10043,
											"end": 10061,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10043,
											"end": 10061,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10043,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10079,
											"end": 10092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10079,
											"end": 10092,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9854,
											"end": 10098,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9854,
											"end": 10098,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10103,
											"end": 10331,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10103,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 10205,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10200,
											"end": 10210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10237,
											"end": 10239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10235,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10240,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10268,
											"end": 10271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10272,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10273,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10296,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10249,
											"end": 10296,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10276,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10276,
											"end": 10294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										}
									],
									".data": {
										"20F75E61DAE66BD43CC4D6E74412A2A0DFC4C34B4746776EB4E12C627179461C": "436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"32DAB9ECE0397C38C85244ED755F6110088FB13D43A7E9D6809DA7619813D0FE": "436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
										"5BDEAFAE4AAACE0ED9B7DF6E60F285C9E8E84A3CEAC05AF6B6259BFED8E161F5": "436f6d703a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
										"6426C6C63F7C8DAECF0B8A35BFE8C0F43DC9621D39CB2BF0C2CD35CC9DB8742F": "436f6d703a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"79BF2F3C2009651B33D37EFB8A65657C3E203B2C36F61068863922CB9E64A77A": "436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
										"838EC7826D8A7E194A0B4C14B8572B8A97CBF1EC9A1DD8F0DC2CA0DBF889365C": "436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
										"B7AC833594DA1DF58FD15C3B6B55EB20762DBA088C48B65CE9D522A789FF2495": "436f6d703a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
										"CAC5F7635B67ABA587752F385D4AAA6FE7D1615E382CD95E6C1AE76525BE695E": "436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"account\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"returns\":{\"_0\":\"The number of tokens approved\"}},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"returns\":{\"_0\":\"Whether or not the approval succeeded\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"returns\":{\"_0\":\"The number of tokens held\"}},\"constructor\":{\"params\":{\"account\":\"The initial account to grant all the tokens\"}},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"transfer(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\",\"src\":\"The address of the source account\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"The standard EIP-20 approval event\"},\"DelegateChanged(address,address,address)\":{\"notice\":\"An event thats emitted when an account changes its delegate\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"An event thats emitted when a delegate account's vote balance changes\"},\"Transfer(address,address,uint256)\":{\"notice\":\"The standard EIP-20 transfer event\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"checkpoints(address,uint32)\":{\"notice\":\"A record of votes checkpoints for each account, by index\"},\"constructor\":{\"notice\":\"Construct a new Comp token\"},\"decimals()\":{\"notice\":\"EIP-20 token decimals for this token\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegates(address)\":{\"notice\":\"A record of each accounts delegate\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"name()\":{\"notice\":\"EIP-20 token name for this token\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numCheckpoints(address)\":{\"notice\":\"The number of checkpoints for each account\"},\"symbol()\":{\"notice\":\"EIP-20 token symbol for this token\"},\"totalSupply()\":{\"notice\":\"Total number of tokens in circulation\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":\"Comp\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol\":{\"keccak256\":\"0x046803348d7c99f73ed0162a0e377b517245f4044f6ce9b038f57b11441b986f\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://49a79f9fd67150385e7f3a74a038f55ab3de9a3b4c7b68cff40fbc0a4717f4c5\",\"dweb:/ipfs/QmT5Y1AxHSa5KpjuAXPXnHR1s4VS8G1DQRKXYSBE7ijuJv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol:Comp",
								"label": "allowances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint96))"
							},
							{
								"astId": 29,
								"contract": "NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol:Comp",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint96)"
							},
							{
								"astId": 34,
								"contract": "NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol:Comp",
								"label": "delegates",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 47,
								"contract": "NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol:Comp",
								"label": "checkpoints",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)39_storage))"
							},
							{
								"astId": 52,
								"contract": "NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol:Comp",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 69,
								"contract": "NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol:Comp",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint96))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint96))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint96)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)39_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct Comp.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)39_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_address,t_uint96)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint96)",
								"numberOfBytes": "32",
								"value": "t_uint96"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)39_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct Comp.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)39_storage"
							},
							"t_struct(Checkpoint)39_storage": {
								"encoding": "inplace",
								"label": "struct Comp.Checkpoint",
								"members": [
									{
										"astId": 36,
										"contract": "NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol:Comp",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 38,
										"contract": "NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol:Comp",
										"label": "votes",
										"offset": 4,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "The standard EIP-20 approval event"
							},
							"DelegateChanged(address,address,address)": {
								"notice": "An event thats emitted when an account changes its delegate"
							},
							"DelegateVotesChanged(address,uint256,uint256)": {
								"notice": "An event thats emitted when a delegate account's vote balance changes"
							},
							"Transfer(address,address,uint256)": {
								"notice": "The standard EIP-20 transfer event"
							}
						},
						"kind": "user",
						"methods": {
							"DELEGATION_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the delegation struct used by the contract"
							},
							"DOMAIN_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the contract's domain"
							},
							"allowance(address,address)": {
								"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
							},
							"approve(address,uint256)": {
								"notice": "Approve `spender` to transfer up to `amount` from `src`"
							},
							"balanceOf(address)": {
								"notice": "Get the number of tokens held by the `account`"
							},
							"checkpoints(address,uint32)": {
								"notice": "A record of votes checkpoints for each account, by index"
							},
							"constructor": {
								"notice": "Construct a new Comp token"
							},
							"decimals()": {
								"notice": "EIP-20 token decimals for this token"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"delegates(address)": {
								"notice": "A record of each accounts delegate"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"name()": {
								"notice": "EIP-20 token name for this token"
							},
							"nonces(address)": {
								"notice": "A record of states for signing / validating signatures"
							},
							"numCheckpoints(address)": {
								"notice": "The number of checkpoints for each account"
							},
							"symbol()": {
								"notice": "EIP-20 token symbol for this token"
							},
							"totalSupply()": {
								"notice": "Total number of tokens in circulation"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer `amount` tokens from `src` to `dst`"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol:78:5:\n   |\n78 |     constructor(address account) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3943,
					"file": "NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol",
					"start": 3794
				},
				"type": "Warning"
			}
		],
		"sources": {
			"NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol": {
				"ast": {
					"absolutePath": "NYKE PROTOCOL - Comptroller with Oracle/contracts/Governance/Comp.sol",
					"exportedSymbols": {
						"Comp": [
							999
						]
					},
					"id": 1000,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "1288:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Comp",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 999,
							"linearizedBaseContracts": [
								999
							],
							"name": "Comp",
							"nameLocation": "1323:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "1334:44:0",
										"text": "@notice EIP-20 token name for this token"
									},
									"functionSelector": "06fdde03",
									"id": 5,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "1406:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "1383:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 3,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1383:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "54657374",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_85cc825a98ec217d960f113f5f80a95d7fd18e3725d37df428eb14f880bdfc12",
											"typeString": "literal_string \"Test\""
										},
										"value": "Test"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "1426:46:0",
										"text": "@notice EIP-20 token symbol for this token"
									},
									"functionSelector": "95d89b41",
									"id": 9,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "1500:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "1477:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 7,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1477:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "54455354",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1509:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
											"typeString": "literal_string \"TEST\""
										},
										"value": "TEST"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "1522:48:0",
										"text": "@notice EIP-20 token decimals for this token"
									},
									"functionSelector": "313ce567",
									"id": 13,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "1597:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "1575:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 11,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1575:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1608:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "1617:49:0",
										"text": "@notice Total number of tokens in circulation"
									},
									"functionSelector": "18160ddd",
									"id": 17,
									"mutability": "constant",
									"name": "totalSupply",
									"nameLocation": "1692:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "1671:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1671:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030303030653138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1706:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"value": "10000000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1743:49:0",
										"text": "@notice Allowance amounts on behalf of others"
									},
									"id": 24,
									"mutability": "mutable",
									"name": "allowances",
									"nameLocation": "1855:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "1797:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
										"typeString": "mapping(address => mapping(address => uint96))"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1806:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1797:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
											"typeString": "mapping(address => mapping(address => uint96))"
										},
										"valueType": {
											"id": 22,
											"keyType": {
												"id": 20,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1826:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1817:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
												"typeString": "mapping(address => uint96)"
											},
											"valueType": {
												"id": 21,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1837:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1872:62:0",
										"text": "@notice Official record of token balances for each account"
									},
									"id": 29,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "1976:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "1939:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
										"typeString": "mapping(address => uint96)"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1948:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1939:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
											"typeString": "mapping(address => uint96)"
										},
										"valueType": {
											"id": 27,
											"name": "uint96",
											"nodeType": "ElementaryTypeName",
											"src": "1959:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1991:46:0",
										"text": "@notice A record of each accounts delegate"
									},
									"functionSelector": "587cde1e",
									"id": 34,
									"mutability": "mutable",
									"name": "delegates",
									"nameLocation": "2078:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "2042:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 33,
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2051:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2042:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2062:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Comp.Checkpoint",
									"id": 39,
									"members": [
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "fromBlock",
											"nameLocation": "2205:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 39,
											"src": "2198:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 35,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2198:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 38,
											"mutability": "mutable",
											"name": "votes",
											"nameLocation": "2231:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 39,
											"src": "2224:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 37,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "2224:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nameLocation": "2177:10:0",
									"nodeType": "StructDefinition",
									"scope": 999,
									"src": "2170:73:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "2249:68:0",
										"text": "@notice A record of votes checkpoints for each account, by index"
									},
									"functionSelector": "f1127ed8",
									"id": 47,
									"mutability": "mutable",
									"name": "checkpoints",
									"nameLocation": "2381:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "2322:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint))"
									},
									"typeName": {
										"id": 46,
										"keyType": {
											"id": 41,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2331:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2322:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint))"
										},
										"valueType": {
											"id": 45,
											"keyType": {
												"id": 42,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2351:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "2342:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
												"typeString": "mapping(uint32 => struct Comp.Checkpoint)"
											},
											"valueType": {
												"id": 44,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 43,
													"name": "Checkpoint",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 39,
													"src": "2361:10:0"
												},
												"referencedDeclaration": 39,
												"src": "2361:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$39_storage_ptr",
													"typeString": "struct Comp.Checkpoint"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2399:54:0",
										"text": "@notice The number of checkpoints for each account"
									},
									"functionSelector": "6fcfff45",
									"id": 52,
									"mutability": "mutable",
									"name": "numCheckpoints",
									"nameLocation": "2493:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "2458:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 51,
										"keyType": {
											"id": 49,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2458:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 50,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "2478:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2514:58:0",
										"text": "@notice The EIP-712 typehash for the contract's domain"
									},
									"functionSelector": "20606b70",
									"id": 58,
									"mutability": "constant",
									"name": "DOMAIN_TYPEHASH",
									"nameLocation": "2601:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "2577:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 54,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2577:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 56,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2629:69:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 55,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2619:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 57,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2619:80:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2706:79:0",
										"text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
									},
									"functionSelector": "e7a324dc",
									"id": 64,
									"mutability": "constant",
									"name": "DELEGATION_TYPEHASH",
									"nameLocation": "2814:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "2790:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 60,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2790:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 62,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2846:60:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 61,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2836:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2836:71:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2914:66:0",
										"text": "@notice A record of states for signing / validating signatures"
									},
									"functionSelector": "7ecebe00",
									"id": 69,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "3018:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 999,
									"src": "2985:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 68,
										"keyType": {
											"id": 66,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2994:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2985:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 67,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3005:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3031:71:0",
										"text": "@notice An event thats emitted when an account changes its delegate"
									},
									"id": 78,
									"name": "DelegateChanged",
									"nameLocation": "3113:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "3145:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3129:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nameLocation": "3172:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3156:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nameLocation": "3202:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3186:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3128:85:0"
									},
									"src": "3107:107:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3220:81:0",
										"text": "@notice An event thats emitted when a delegate account's vote balance changes"
									},
									"id": 87,
									"name": "DelegateVotesChanged",
									"nameLocation": "3312:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "3349:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3333:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nameLocation": "3364:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3359:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3359:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "3386:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3381:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:65:0"
									},
									"src": "3306:92:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3404:46:0",
										"text": "@notice The standard EIP-20 transfer event"
									},
									"id": 96,
									"name": "Transfer",
									"nameLocation": "3461:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3486:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3470:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3508:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3492:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3520:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3512:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:58:0"
									},
									"src": "3455:73:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "3534:46:0",
										"text": "@notice The standard EIP-20 approval event"
									},
									"id": 105,
									"name": "Approval",
									"nameLocation": "3591:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3616:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "3600:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3639:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "3623:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3656:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "3648:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3599:64:0"
									},
									"src": "3585:79:0"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "3830:113:0",
										"statements": [
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 111,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3840:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 113,
														"indexExpression": {
															"id": 112,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "3849:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3840:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 116,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "3867:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3860:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint96_$",
																"typeString": "type(uint96)"
															},
															"typeName": {
																"id": 114,
																"name": "uint96",
																"nodeType": "ElementaryTypeName",
																"src": "3860:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3860:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "3840:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3840:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3911:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3903:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 121,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3903:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3903:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "3915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "3924:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 120,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3894:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "EmitStatement",
												"src": "3889:47:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "3670:119:0",
										"text": " @notice Construct a new Comp token\n @param account The initial account to grant all the tokens"
									},
									"id": 130,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3814:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3806:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:17:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3830:0:0"
									},
									"scope": 999,
									"src": "3794:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4321:52:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 140,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4338:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4338:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 144,
													"indexExpression": {
														"id": 143,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "4358:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4338:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 139,
												"id": 145,
												"nodeType": "Return",
												"src": "4331:35:0"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "3949:285:0",
										"text": " @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n @param account The address of the account holding the funds\n @param spender The address of the account spending the funds\n @return The number of tokens approved"
									},
									"functionSelector": "dd62ed3e",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4248:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4266:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4258:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4283:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4275:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:34:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4315:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4315:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4314:6:0"
									},
									"scope": 999,
									"src": "4239:134:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "4915:345:0",
										"statements": [
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4932:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "4925:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 157,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "4925:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 159,
												"nodeType": "VariableDeclarationStatement",
												"src": "4925:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 160,
														"name": "rawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "4952:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4970:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 162,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4970:4:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 161,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4965:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4965:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4965:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4952:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 183,
													"nodeType": "Block",
													"src": "5037:92:0",
													"statements": [
														{
															"expression": {
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 176,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "5051:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 178,
																			"name": "rawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 152,
																			"src": "5067:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
																			"id": 179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5078:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe",
																				"typeString": "literal_string \"Comp::approve: amount exceeds 96 bits\""
																			},
																			"value": "Comp::approve: amount exceeds 96 bits"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe",
																				"typeString": "literal_string \"Comp::approve: amount exceeds 96 bits\""
																			}
																		],
																		"id": 177,
																		"name": "safe96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "5060:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																			"typeString": "function (uint256,string memory) pure returns (uint96)"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5060:58:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "5051:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 182,
															"nodeType": "ExpressionStatement",
															"src": "5051:67:0"
														}
													]
												},
												"id": 184,
												"nodeType": "IfStatement",
												"src": "4948:181:0",
												"trueBody": {
													"id": 175,
													"nodeType": "Block",
													"src": "4981:50:0",
													"statements": [
														{
															"expression": {
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 167,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "4995:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5009:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint96_$",
																					"typeString": "type(uint96)"
																				},
																				"typeName": {
																					"id": 169,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "5009:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint96_$",
																					"typeString": "type(uint96)"
																				}
																			],
																			"id": 168,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5004:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5004:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint96",
																			"typeString": "type(uint96)"
																		}
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5004:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "4995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 174,
															"nodeType": "ExpressionStatement",
															"src": "4995:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 185,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "5139:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																	"typeString": "mapping(address => mapping(address => uint96))"
																}
															},
															"id": 189,
															"indexExpression": {
																"expression": {
																	"id": 186,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5150:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5150:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5139:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 190,
														"indexExpression": {
															"id": 188,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "5162:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5139:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 191,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5173:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "5139:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "5139:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 195,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5204:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 197,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "5216:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 198,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "5225:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 194,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "5195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5195:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "EmitStatement",
												"src": "5190:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 156,
												"id": 202,
												"nodeType": "Return",
												"src": "5242:11:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4379:457:0",
										"text": " @notice Approve `spender` to transfer up to `amount` from `src`\n @dev This will overwrite the approval amount for `spender`\n  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n @param spender The address of the account which may transfer tokens\n @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n @return Whether or not the approval succeeded"
									},
									"functionSelector": "095ea7b3",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4850:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "4880:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4857:33:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4909:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4909:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4908:6:0"
									},
									"scope": 999,
									"src": "4841:419:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5521:41:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 212,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "5538:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 214,
													"indexExpression": {
														"id": 213,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "5547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5538:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 211,
												"id": 215,
												"nodeType": "Return",
												"src": "5531:24:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "5266:185:0",
										"text": " @notice Get the number of tokens held by the `account`\n @param account The address of the account to get the balance of\n @return The number of tokens held"
									},
									"functionSelector": "70a08231",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5465:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5483:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5475:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5474:17:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5515:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5515:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5514:6:0"
									},
									"scope": 999,
									"src": "5456:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "5889:163:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5906:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 243,
														"src": "5899:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 227,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "5899:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"arguments": [
														{
															"id": 230,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5922:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "436f6d703a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5933:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5bdeafae4aaace0ed9b7df6e60f285c9e8e84a3ceac05af6b6259bfed8e161f5",
																"typeString": "literal_string \"Comp::transfer: amount exceeds 96 bits\""
															},
															"value": "Comp::transfer: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5bdeafae4aaace0ed9b7df6e60f285c9e8e84a3ceac05af6b6259bfed8e161f5",
																"typeString": "literal_string \"Comp::transfer: amount exceeds 96 bits\""
															}
														],
														"id": 229,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "5915:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5915:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5899:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 235,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6000:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6000:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 237,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "6012:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 238,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "6017:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 234,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "5984:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5984:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "5984:40:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6041:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 242,
												"nodeType": "Return",
												"src": "6034:11:0"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5568:245:0",
										"text": " @notice Transfer `amount` tokens from `msg.sender` to `dst`\n @param dst The address of the destination account\n @param rawAmount The number of tokens to transfer\n @return Whether or not the transfer succeeded"
									},
									"functionSelector": "a9059cbb",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5827:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "5844:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "5836:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "5854:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "5849:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5849:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5835:29:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "5883:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5883:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5882:6:0"
									},
									"scope": 999,
									"src": "5818:234:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "6441:576:0",
										"statements": [
											{
												"assignments": [
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6459:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "6451:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 256,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6451:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 260,
												"initialValue": {
													"expression": {
														"id": 258,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6469:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6469:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6451:28:0"
											},
											{
												"assignments": [
													262
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "spenderAllowance",
														"nameLocation": "6496:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "6489:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 261,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "6489:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 263,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "6515:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 265,
														"indexExpression": {
															"id": 264,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "6526:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6515:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 267,
													"indexExpression": {
														"id": 266,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "6531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6515:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6489:50:0"
											},
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6556:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "6549:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 269,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "6549:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 275,
												"initialValue": {
													"arguments": [
														{
															"id": 272,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6572:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6583:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe",
																"typeString": "literal_string \"Comp::approve: amount exceeds 96 bits\""
															},
															"value": "Comp::approve: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe",
																"typeString": "literal_string \"Comp::approve: amount exceeds 96 bits\""
															}
														],
														"id": 271,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "6565:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6565:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6549:74:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 276,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "6638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 277,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "6649:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6638:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "spenderAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6656:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6681:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": {
																			"id": 281,
																			"name": "uint96",
																			"nodeType": "ElementaryTypeName",
																			"src": "6681:6:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		}
																	],
																	"id": 280,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "6676:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6676:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint96",
																	"typeString": "type(uint96)"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "6676:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"src": "6656:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6638:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 310,
												"nodeType": "IfStatement",
												"src": "6634:312:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "6694:252:0",
													"statements": [
														{
															"assignments": [
																288
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 288,
																	"mutability": "mutable",
																	"name": "newAllowance",
																	"nameLocation": "6715:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 309,
																	"src": "6708:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 287,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "6708:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 294,
															"initialValue": {
																"arguments": [
																	{
																		"id": 290,
																		"name": "spenderAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6736:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 291,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "6754:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"hexValue": "436f6d703a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6762:63:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b7ac833594da1df58fd15c3b6b55eb20762dba088c48b65ce9d522a789ff2495",
																			"typeString": "literal_string \"Comp::transferFrom: transfer amount exceeds spender allowance\""
																		},
																		"value": "Comp::transferFrom: transfer amount exceeds spender allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b7ac833594da1df58fd15c3b6b55eb20762dba088c48b65ce9d522a789ff2495",
																			"typeString": "literal_string \"Comp::transferFrom: transfer amount exceeds spender allowance\""
																		}
																	],
																	"id": 289,
																	"name": "sub96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "6730:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																		"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6730:96:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6708:118:0"
														},
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 295,
																			"name": "allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "6840:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																				"typeString": "mapping(address => mapping(address => uint96))"
																			}
																		},
																		"id": 298,
																		"indexExpression": {
																			"id": 296,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "6851:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6840:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																			"typeString": "mapping(address => uint96)"
																		}
																	},
																	"id": 299,
																	"indexExpression": {
																		"id": 297,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "6856:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6840:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 300,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "6867:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "6840:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "6840:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "src",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "6908:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 305,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "6913:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 306,
																		"name": "newAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "6922:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"id": 303,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "6899:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6899:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 308,
															"nodeType": "EmitStatement",
															"src": "6894:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "6972:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "6977:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 314,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "6982:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 311,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "6956:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6956:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "6956:33:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7006:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 255,
												"id": 318,
												"nodeType": "Return",
												"src": "6999:11:0"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "6058:290:0",
										"text": " @notice Transfer `amount` tokens from `src` to `dst`\n @param src The address of the source account\n @param dst The address of the destination account\n @param rawAmount The number of tokens to transfer\n @return Whether or not the transfer succeeded"
									},
									"functionSelector": "23b872dd",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6362:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "6383:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6375:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "6396:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6388:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "6406:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6401:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6401:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6374:42:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6434:6:0"
									},
									"scope": 999,
									"src": "6353:664:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "7203:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 327,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7230:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7230:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "7242:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 326,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "7220:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7220:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 325,
												"id": 331,
												"nodeType": "Return",
												"src": "7213:39:0"
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "7023:131:0",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
									},
									"functionSelector": "5c19a95c",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "7168:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "7185:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7177:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7176:19:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7203:0:0"
									},
									"scope": 999,
									"src": "7159:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "7787:687:0",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nameLocation": "7805:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "7797:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 349,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 354,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "7844:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 358,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "7877:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7871:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 356,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "7871:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7871:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 355,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "7861:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7861:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 361,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "7885:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7885:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 365,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7907:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Comp_$999",
																				"typeString": "contract Comp"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Comp_$999",
																				"typeString": "contract Comp"
																			}
																		],
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7899:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 363,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7899:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7899:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 352,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7833:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "7833:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7833:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 351,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7823:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7823:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7797:117:0"
											},
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "7932:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "7924:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 370,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 375,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "7966:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 376,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7987:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "7998:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 378,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "8005:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 373,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7955:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "7955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7955:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 372,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7945:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7945:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7924:89:0"
											},
											{
												"assignments": [
													383
												],
												"declarations": [
													{
														"constant": false,
														"id": 383,
														"mutability": "mutable",
														"name": "digest",
														"nameLocation": "8031:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "8023:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 382,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8067:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 388,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "8079:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 389,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "8096:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 385,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8050:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8050:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8050:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 384,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8040:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8040:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8023:85:0"
											},
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "signatory",
														"nameLocation": "8126:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "8118:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 393,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8118:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"arguments": [
														{
															"id": 396,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "8148:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 397,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "8156:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 398,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "8159:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 399,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "8162:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 395,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "8138:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8138:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8118:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "8182:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8203:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8195:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8195:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8195:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8182:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8207:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2af9d25b44c3e789cf7d12e941fc7ef1e32cecdd98da61996de7571027751bd3",
																"typeString": "literal_string \"Comp::delegateBySig: invalid signature\""
															},
															"value": "Comp::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2af9d25b44c3e789cf7d12e941fc7ef1e32cecdd98da61996de7571027751bd3",
																"typeString": "literal_string \"Comp::delegateBySig: invalid signature\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8174:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8174:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "8174:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 413,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "8266:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8275:19:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 414,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 69,
																		"src": "8275:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 416,
																	"indexExpression": {
																		"id": 415,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "8282:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8275:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8266:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8296:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_646cb63637df51b5cf3e35b8d418574ca2fa5dde981ba9f8f5779cfcbbc8a355",
																"typeString": "literal_string \"Comp::delegateBySig: invalid nonce\""
															},
															"value": "Comp::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_646cb63637df51b5cf3e35b8d418574ca2fa5dde981ba9f8f5779cfcbbc8a355",
																"typeString": "literal_string \"Comp::delegateBySig: invalid nonce\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8258:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8258:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "8258:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 423,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8351:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8351:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 425,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "8370:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8351:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8378:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e8a87756e5afc73b82eff32f16bb6b10740f4f70e3e129eab06194e30ad3059",
																"typeString": "literal_string \"Comp::delegateBySig: signature expired\""
															},
															"value": "Comp::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e8a87756e5afc73b82eff32f16bb6b10740f4f70e3e129eab06194e30ad3059",
																"typeString": "literal_string \"Comp::delegateBySig: signature expired\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8343:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "8343:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 431,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "8446:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "8457:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 430,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "8436:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8436:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 348,
												"id": 434,
												"nodeType": "Return",
												"src": "8429:38:0"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "7265:412:0",
										"text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
									},
									"functionSelector": "c3cda520",
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nameLocation": "7691:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "7713:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7705:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "7729:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7724:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7724:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "expiry",
												"nameLocation": "7741:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7736:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7736:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "7755:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7749:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 341,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7749:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "7766:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7758:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 343,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7704:75:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7787:0:0"
									},
									"scope": 999,
									"src": "7682:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "8741:146:0",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nameLocation": "8758:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "8751:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 444,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8751:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"baseExpression": {
														"id": 446,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "8773:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 448,
													"indexExpression": {
														"id": 447,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "8788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8773:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8751:45:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 450,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "8813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8828:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8813:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8879:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8813:67:0",
													"trueExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 453,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "8832:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																	}
																},
																"id": 455,
																"indexExpression": {
																	"id": 454,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "8844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8832:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																	"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																}
															},
															"id": 459,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 456,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "8853:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8868:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8853:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8832:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																"typeString": "struct Comp.Checkpoint storage ref"
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "8832:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 443,
												"id": 463,
												"nodeType": "Return",
												"src": "8806:74:0"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "8480:183:0",
										"text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
									},
									"functionSelector": "b4b5ea57",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nameLocation": "8677:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8701:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "8693:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8692:17:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "8733:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 441,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "8733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8732:8:0"
									},
									"scope": 999,
									"src": "8668:219:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "9396:1099:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "9414:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 477,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9428:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "9428:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9414:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9442:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49387db7fef935f0f28be8b61df0527ef3c11db5acad132a74e4fb5d480e55d0",
																"typeString": "literal_string \"Comp::getPriorVotes: not yet determined\""
															},
															"value": "Comp::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49387db7fef935f0f28be8b61df0527ef3c11db5acad132a74e4fb5d480e55d0",
																"typeString": "literal_string \"Comp::getPriorVotes: not yet determined\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9406:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9406:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "9406:78:0"
											},
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nameLocation": "9502:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "9495:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 483,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "9495:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"baseExpression": {
														"id": 485,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "9517:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 487,
													"indexExpression": {
														"id": 486,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "9532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9517:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9495:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 489,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "9554:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9554:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 495,
												"nodeType": "IfStatement",
												"src": "9550:56:0",
												"trueBody": {
													"id": 494,
													"nodeType": "Block",
													"src": "9573:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9594:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 474,
															"id": 493,
															"nodeType": "Return",
															"src": "9587:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 496,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "9663:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																	}
																},
																"id": 498,
																"indexExpression": {
																	"id": 497,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "9675:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9663:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																	"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																}
															},
															"id": 502,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 499,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "9684:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9699:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9684:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9663:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																"typeString": "struct Comp.Checkpoint storage ref"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "9663:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 504,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "9715:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9663:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"nodeType": "IfStatement",
												"src": "9659:145:0",
												"trueBody": {
													"id": 515,
													"nodeType": "Block",
													"src": "9728:76:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 506,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 47,
																			"src": "9749:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																			}
																		},
																		"id": 508,
																		"indexExpression": {
																			"id": 507,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "9761:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9749:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																			"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																		}
																	},
																	"id": 512,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 509,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "9770:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9785:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9770:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9749:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																		"typeString": "struct Comp.Checkpoint storage ref"
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 38,
																"src": "9749:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 474,
															"id": 514,
															"nodeType": "Return",
															"src": "9742:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 517,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "9862:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																	}
																},
																"id": 519,
																"indexExpression": {
																	"id": 518,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "9874:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9862:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																	"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																}
															},
															"id": 521,
															"indexExpression": {
																"hexValue": "30",
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9883:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9862:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																"typeString": "struct Comp.Checkpoint storage ref"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "9862:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 523,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "9898:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9862:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "IfStatement",
												"src": "9858:86:0",
												"trueBody": {
													"id": 527,
													"nodeType": "Block",
													"src": "9911:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9932:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 474,
															"id": 526,
															"nodeType": "Return",
															"src": "9925:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "lower",
														"nameLocation": "9961:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "9954:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 529,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "9954:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"hexValue": "30",
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9969:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9954:16:0"
											},
											{
												"assignments": [
													534
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "upper",
														"nameLocation": "9987:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "9980:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 533,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "9980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 535,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "9995:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10010:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9995:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9980:31:0"
											},
											{
												"body": {
													"id": 588,
													"nodeType": "Block",
													"src": "10043:396:0",
													"statements": [
														{
															"assignments": [
																543
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 543,
																	"mutability": "mutable",
																	"name": "center",
																	"nameLocation": "10064:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 588,
																	"src": "10057:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 542,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "10057:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 552,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 544,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "10073:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 545,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 534,
																					"src": "10082:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 546,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "10090:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "10082:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 548,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "10081:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10099:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "10081:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "10073:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10057:43:0"
														},
														{
															"assignments": [
																555
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 555,
																	"mutability": "mutable",
																	"name": "cp",
																	"nameLocation": "10159:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 588,
																	"src": "10141:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$39_memory_ptr",
																		"typeString": "struct Comp.Checkpoint"
																	},
																	"typeName": {
																		"id": 554,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 553,
																			"name": "Checkpoint",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 39,
																			"src": "10141:10:0"
																		},
																		"referencedDeclaration": 39,
																		"src": "10141:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$39_storage_ptr",
																			"typeString": "struct Comp.Checkpoint"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 561,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 556,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "10164:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																		}
																	},
																	"id": 558,
																	"indexExpression": {
																		"id": 557,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "10176:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10164:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																		"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																	}
																},
																"id": 560,
																"indexExpression": {
																	"id": 559,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "10185:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10164:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																	"typeString": "struct Comp.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10141:51:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "10210:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$39_memory_ptr",
																			"typeString": "struct Comp.Checkpoint memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "10210:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 564,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "10226:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10210:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 570,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "10297:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$39_memory_ptr",
																				"typeString": "struct Comp.Checkpoint memory"
																			}
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 36,
																		"src": "10297:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 572,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "10312:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10297:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 585,
																	"nodeType": "Block",
																	"src": "10378:51:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 579,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 534,
																					"src": "10396:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 582,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 580,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 543,
																						"src": "10404:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 581,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10413:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "10404:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "10396:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 584,
																			"nodeType": "ExpressionStatement",
																			"src": "10396:18:0"
																		}
																	]
																},
																"id": 586,
																"nodeType": "IfStatement",
																"src": "10293:136:0",
																"trueBody": {
																	"id": 578,
																	"nodeType": "Block",
																	"src": "10325:47:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 574,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "10343:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 575,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 543,
																					"src": "10351:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "10343:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 577,
																			"nodeType": "ExpressionStatement",
																			"src": "10343:14:0"
																		}
																	]
																}
															},
															"id": 587,
															"nodeType": "IfStatement",
															"src": "10206:223:0",
															"trueBody": {
																"id": 569,
																"nodeType": "Block",
																"src": "10239:48:0",
																"statements": [
																	{
																		"expression": {
																			"expression": {
																				"id": 566,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 555,
																				"src": "10264:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$39_memory_ptr",
																					"typeString": "struct Comp.Checkpoint memory"
																				}
																			},
																			"id": 567,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 38,
																			"src": "10264:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"functionReturnParameters": 474,
																		"id": 568,
																		"nodeType": "Return",
																		"src": "10257:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "10028:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 540,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "10036:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "10028:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 589,
												"nodeType": "WhileStatement",
												"src": "10021:418:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 590,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "10455:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																}
															},
															"id": 592,
															"indexExpression": {
																"id": 591,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "10467:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10455:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 593,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "10476:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10455:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
															"typeString": "struct Comp.Checkpoint storage ref"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 38,
													"src": "10455:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 474,
												"id": 596,
												"nodeType": "Return",
												"src": "10448:40:0"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "8893:411:0",
										"text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
									},
									"functionSelector": "782d6fe1",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nameLocation": "9318:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "9354:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9349:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9349:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9331:35:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9388:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 472,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "9388:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9387:8:0"
									},
									"scope": 999,
									"src": "9309:1186:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "10567:301:0",
										"statements": [
											{
												"assignments": [
													606
												],
												"declarations": [
													{
														"constant": false,
														"id": 606,
														"mutability": "mutable",
														"name": "currentDelegate",
														"nameLocation": "10585:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "10577:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 605,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10577:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"baseExpression": {
														"id": 607,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "10603:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 609,
													"indexExpression": {
														"id": 608,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "10613:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10603:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10577:46:0"
											},
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "delegatorBalance",
														"nameLocation": "10640:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "10633:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 611,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "10633:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"baseExpression": {
														"id": 613,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "10659:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 615,
													"indexExpression": {
														"id": 614,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "10668:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10659:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10633:45:0"
											},
											{
												"expression": {
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 617,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "10688:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 619,
														"indexExpression": {
															"id": 618,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "10698:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10688:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 620,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "10711:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10688:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "10688:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 624,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "10752:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "10763:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "10780:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 623,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "10736:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10736:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "EmitStatement",
												"src": "10731:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 630,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "10816:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "10833:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "10844:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 629,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "10801:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10801:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "10801:60:0"
											}
										]
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "10510:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "10528:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10520:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "10547:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10539:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10519:38:0"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10567:0:0"
									},
									"scope": 999,
									"src": "10501:367:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "10949:530:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "10967:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10982:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 647,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10974:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10974:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10967:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10986:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1f9ee8b9464145aa6c6c80f5dd3de0ed75b63050c7ed5dda64f4dfa66ae889e",
																"typeString": "literal_string \"Comp::_transferTokens: cannot transfer from the zero address\""
															},
															"value": "Comp::_transferTokens: cannot transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1f9ee8b9464145aa6c6c80f5dd3de0ed75b63050c7ed5dda64f4dfa66ae889e",
																"typeString": "literal_string \"Comp::_transferTokens: cannot transfer from the zero address\""
															}
														],
														"id": 645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10959:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "10959:90:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 656,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "11067:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11082:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11074:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 657,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11074:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11074:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11067:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11086:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6dfd73e095121fac86dfcecda88ee2e5a2c4c80da47692a4520dec08a942eef4",
																"typeString": "literal_string \"Comp::_transferTokens: cannot transfer to the zero address\""
															},
															"value": "Comp::_transferTokens: cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6dfd73e095121fac86dfcecda88ee2e5a2c4c80da47692a4520dec08a942eef4",
																"typeString": "literal_string \"Comp::_transferTokens: cannot transfer to the zero address\""
															}
														],
														"id": 655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11059:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "11059:88:0"
											},
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 665,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "11158:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 667,
														"indexExpression": {
															"id": 666,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "11167:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11158:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 669,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "11180:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 671,
																"indexExpression": {
																	"id": 670,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "11189:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11180:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 672,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "11195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11203:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_20f75e61dae66bd43cc4d6e74412a2a0dfc4c34b4746776eb4e12c627179461c",
																	"typeString": "literal_string \"Comp::_transferTokens: transfer amount exceeds balance\""
																},
																"value": "Comp::_transferTokens: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_20f75e61dae66bd43cc4d6e74412a2a0dfc4c34b4746776eb4e12c627179461c",
																	"typeString": "literal_string \"Comp::_transferTokens: transfer amount exceeds balance\""
																}
															],
															"id": 668,
															"name": "sub96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "11174:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11174:86:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11158:102:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "11158:102:0"
											},
											{
												"expression": {
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 677,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "11270:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 679,
														"indexExpression": {
															"id": 678,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "11279:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11270:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 681,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "11292:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 683,
																"indexExpression": {
																	"id": 682,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "11301:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11292:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 684,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "11307:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11315:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_838ec7826d8a7e194a0b4c14b8572b8a97cbf1ec9a1dd8f0dc2ca0dbf889365c",
																	"typeString": "literal_string \"Comp::_transferTokens: transfer amount overflows\""
																},
																"value": "Comp::_transferTokens: transfer amount overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_838ec7826d8a7e194a0b4c14b8572b8a97cbf1ec9a1dd8f0dc2ca0dbf889365c",
																	"typeString": "literal_string \"Comp::_transferTokens: transfer amount overflows\""
																}
															],
															"id": 680,
															"name": "add96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11286:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11286:80:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11270:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "11270:96:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 690,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "11390:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "11395:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "11400:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 689,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "11381:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11381:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "EmitStatement",
												"src": "11376:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 696,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "11433:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 698,
															"indexExpression": {
																"id": 697,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "11443:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11433:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 699,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "11449:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 701,
															"indexExpression": {
																"id": 700,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "11459:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11449:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "11465:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 695,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "11418:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11418:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "11418:54:0"
											}
										]
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nameLocation": "10883:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "10907:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "10899:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "10920:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "10912:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10932:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "10925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 641,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "10925:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10898:41:0"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10949:0:0"
									},
									"scope": 999,
									"src": "10874:605:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "11565:843:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "11579:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 716,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "11589:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "11579:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 718,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "11599:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11608:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11599:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11579:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "11575:827:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "11611:791:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 722,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "11629:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11647:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11639:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 723,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11639:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11639:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11629:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 766,
															"nodeType": "IfStatement",
															"src": "11625:377:0",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "11651:351:0",
																"statements": [
																	{
																		"assignments": [
																			729
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 729,
																				"mutability": "mutable",
																				"name": "srcRepNum",
																				"nameLocation": "11676:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 765,
																				"src": "11669:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 728,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "11669:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 733,
																		"initialValue": {
																			"baseExpression": {
																				"id": 730,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "11688:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 732,
																			"indexExpression": {
																				"id": 731,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "11703:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11688:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11669:41:0"
																	},
																	{
																		"assignments": [
																			735
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 735,
																				"mutability": "mutable",
																				"name": "srcRepOld",
																				"nameLocation": "11735:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 765,
																				"src": "11728:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 734,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "11728:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 749,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 736,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "11747:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11759:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "11747:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11806:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "11747:60:0",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 739,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 47,
																							"src": "11763:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																							}
																						},
																						"id": 741,
																						"indexExpression": {
																							"id": 740,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 708,
																							"src": "11775:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "11763:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																							"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																						}
																					},
																					"id": 745,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 742,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 729,
																							"src": "11783:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 743,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "11795:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "11783:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11763:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																						"typeString": "struct Comp.Checkpoint storage ref"
																					}
																				},
																				"id": 746,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 38,
																				"src": "11763:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11728:79:0"
																	},
																	{
																		"assignments": [
																			751
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 751,
																				"mutability": "mutable",
																				"name": "srcRepNew",
																				"nameLocation": "11832:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 765,
																				"src": "11825:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 750,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "11825:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 757,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 753,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 735,
																					"src": "11850:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 754,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "11861:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"hexValue": "436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
																					"id": 755,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11869:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_79bf2f3c2009651b33d37efb8a65657c3e203b2c36f61068863922cb9e64a77a",
																						"typeString": "literal_string \"Comp::_moveVotes: vote amount underflows\""
																					},
																					"value": "Comp::_moveVotes: vote amount underflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_79bf2f3c2009651b33d37efb8a65657c3e203b2c36f61068863922cb9e64a77a",
																						"typeString": "literal_string \"Comp::_moveVotes: vote amount underflows\""
																					}
																				],
																				"id": 752,
																				"name": "sub96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "11844:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11844:68:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11825:87:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 759,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 708,
																					"src": "11947:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 760,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "11955:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"id": 761,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 735,
																					"src": "11966:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 762,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 751,
																					"src": "11977:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 758,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "11930:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11930:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 764,
																		"nodeType": "ExpressionStatement",
																		"src": "11930:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 767,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "12020:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12030:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 768,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12030:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12030:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12020:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 811,
															"nodeType": "IfStatement",
															"src": "12016:376:0",
															"trueBody": {
																"id": 810,
																"nodeType": "Block",
																"src": "12042:350:0",
																"statements": [
																	{
																		"assignments": [
																			774
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 774,
																				"mutability": "mutable",
																				"name": "dstRepNum",
																				"nameLocation": "12067:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 810,
																				"src": "12060:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 773,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12060:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 778,
																		"initialValue": {
																			"baseExpression": {
																				"id": 775,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "12079:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 777,
																			"indexExpression": {
																				"id": 776,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "12094:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12079:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12060:41:0"
																	},
																	{
																		"assignments": [
																			780
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 780,
																				"mutability": "mutable",
																				"name": "dstRepOld",
																				"nameLocation": "12126:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 810,
																				"src": "12119:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 779,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "12119:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 794,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 781,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 774,
																					"src": "12138:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 782,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12150:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "12138:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 792,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12197:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "12138:60:0",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 784,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 47,
																							"src": "12154:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																							}
																						},
																						"id": 786,
																						"indexExpression": {
																							"id": 785,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 710,
																							"src": "12166:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "12154:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																							"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																						}
																					},
																					"id": 790,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 789,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 787,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 774,
																							"src": "12174:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 788,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12186:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "12174:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12154:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																						"typeString": "struct Comp.Checkpoint storage ref"
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 38,
																				"src": "12154:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12119:79:0"
																	},
																	{
																		"assignments": [
																			796
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 796,
																				"mutability": "mutable",
																				"name": "dstRepNew",
																				"nameLocation": "12223:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 810,
																				"src": "12216:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 795,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "12216:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 802,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 798,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "12241:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 799,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "12252:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"hexValue": "436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
																					"id": 800,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12260:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cac5f7635b67aba587752f385d4aaa6fe7d1615e382cd95e6c1ae76525be695e",
																						"typeString": "literal_string \"Comp::_moveVotes: vote amount overflows\""
																					},
																					"value": "Comp::_moveVotes: vote amount overflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cac5f7635b67aba587752f385d4aaa6fe7d1615e382cd95e6c1ae76525be695e",
																						"typeString": "literal_string \"Comp::_moveVotes: vote amount overflows\""
																					}
																				],
																				"id": 797,
																				"name": "add96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 963,
																				"src": "12235:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12235:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12216:86:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 804,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 710,
																					"src": "12337:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 805,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 774,
																					"src": "12345:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"id": 806,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "12356:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 807,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "12367:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 803,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "12320:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12320:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 809,
																		"nodeType": "ExpressionStatement",
																		"src": "12320:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nameLocation": "11494:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "srcRep",
												"nameLocation": "11517:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "11509:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "dstRep",
												"nameLocation": "11533:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "11525:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11548:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "11541:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 711,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11541:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11508:47:0"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11565:0:0"
									},
									"scope": 999,
									"src": "11485:923:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "12523:509:0",
										"statements": [
											{
												"assignments": [
													827
												],
												"declarations": [
													{
														"constant": false,
														"id": 827,
														"mutability": "mutable",
														"name": "blockNumber",
														"nameLocation": "12538:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "12531:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 826,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "12531:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 833,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 829,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12559:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "12559:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "436f6d703a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12573:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6426c6c63f7c8daecf0b8a35bfe8c0f43dc9621d39cb2bf0c2cd35cc9db8742f",
																"typeString": "literal_string \"Comp::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "Comp::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_6426c6c63f7c8daecf0b8a35bfe8c0f43dc9621d39cb2bf0c2cd35cc9db8742f",
																"typeString": "literal_string \"Comp::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 828,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "12552:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12552:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12531:97:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 834,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "12641:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12656:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12641:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 837,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "12661:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																		}
																	},
																	"id": 839,
																	"indexExpression": {
																		"id": 838,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "12673:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12661:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																		"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																	}
																},
																"id": 843,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 840,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "12684:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12699:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "12684:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12661:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																	"typeString": "struct Comp.Checkpoint storage ref"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "12661:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 845,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "12715:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "12661:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12641:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "12812:149:0",
													"statements": [
														{
															"expression": {
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 860,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 47,
																			"src": "12824:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																			}
																		},
																		"id": 863,
																		"indexExpression": {
																			"id": 861,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "12836:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12824:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																			"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																		}
																	},
																	"id": 864,
																	"indexExpression": {
																		"id": 862,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "12847:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12824:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																		"typeString": "struct Comp.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 866,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "12874:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"id": 867,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "12887:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"id": 865,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "12863:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$39_storage_ptr_$",
																			"typeString": "type(struct Comp.Checkpoint storage pointer)"
																		}
																	},
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12863:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$39_memory_ptr",
																		"typeString": "struct Comp.Checkpoint memory"
																	}
																},
																"src": "12824:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																	"typeString": "struct Comp.Checkpoint storage ref"
																}
															},
															"id": 870,
															"nodeType": "ExpressionStatement",
															"src": "12824:72:0"
														},
														{
															"expression": {
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 871,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "12908:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 873,
																	"indexExpression": {
																		"id": 872,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "12923:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12908:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 874,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "12936:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12951:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "12936:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "12908:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 878,
															"nodeType": "ExpressionStatement",
															"src": "12908:44:0"
														}
													]
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "12637:324:0",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "12728:78:0",
													"statements": [
														{
															"expression": {
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 848,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 47,
																				"src": "12740:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																				}
																			},
																			"id": 853,
																			"indexExpression": {
																				"id": 849,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 817,
																				"src": "12752:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12740:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$39_storage_$",
																				"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																			}
																		},
																		"id": 854,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 850,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 819,
																				"src": "12763:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12778:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "12763:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12740:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$39_storage",
																			"typeString": "struct Comp.Checkpoint storage ref"
																		}
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 38,
																	"src": "12740:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 856,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "12789:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "12740:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "12740:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 882,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "12995:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "13006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 884,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "13016:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 881,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "12974:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12974:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "EmitStatement",
												"src": "12969:56:0"
											}
										]
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nameLocation": "12423:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "12448:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "12440:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "nCheckpoints",
												"nameLocation": "12466:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "12459:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 818,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "12459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "oldVotes",
												"nameLocation": "12487:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "12480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 820,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12480:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "newVotes",
												"nameLocation": "12504:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "12497:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 822,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12497:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12439:74:0"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12523:0:0"
									},
									"scope": 999,
									"src": "12414:618:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "13121:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 898,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "13139:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13143:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13146:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "13143:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "13139:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 903,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "13150:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13131:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13131:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "13131:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 908,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "13187:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13180:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 906,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "13180:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13180:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 896,
												"id": 910,
												"nodeType": "Return",
												"src": "13173:16:0"
											}
										]
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nameLocation": "13047:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "13059:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "13054:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13054:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13076:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "13062:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 891,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13062:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13053:36:0"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "13113:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 894,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "13113:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13112:8:0"
									},
									"scope": 999,
									"src": "13038:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "13285:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 922,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "13303:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13307:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3936",
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13310:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_96_by_1",
																		"typeString": "int_const 96"
																	},
																	"value": "96"
																},
																"src": "13307:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																}
															},
															"src": "13303:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 927,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "13314:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13295:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "13295:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 932,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "13351:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13344:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 930,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13344:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13344:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 920,
												"id": 934,
												"nodeType": "Return",
												"src": "13337:16:0"
											}
										]
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe96",
									"nameLocation": "13211:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "13223:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13218:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13218:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13240:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13226:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13226:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13217:36:0"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13277:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 918,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13277:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13276:8:0"
									},
									"scope": 999,
									"src": "13202:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "13460:90:0",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "13477:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 962,
														"src": "13470:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 947,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 952,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 949,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "13481:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 950,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "13485:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "13481:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13470:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 954,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "13504:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 955,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "13509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "13504:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 957,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "13512:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13496:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "13496:29:0"
											},
											{
												"expression": {
													"id": 960,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 948,
													"src": "13542:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 946,
												"id": 961,
												"nodeType": "Return",
												"src": "13535:8:0"
											}
										]
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add96",
									"nameLocation": "13375:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13388:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "13381:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 937,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13398:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "13391:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 939,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13391:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13415:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "13401:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 941,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13401:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13380:48:0"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "13452:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 944,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13452:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13451:8:0"
									},
									"scope": 999,
									"src": "13366:184:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "13650:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 975,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "13668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 976,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "13673:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "13668:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 978,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "13676:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 974,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13660:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "13660:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 981,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "13706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 982,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "13710:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "13706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 973,
												"id": 984,
												"nodeType": "Return",
												"src": "13699:12:0"
											}
										]
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub96",
									"nameLocation": "13565:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13578:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "13571:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 964,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13571:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13588:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "13581:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 966,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13581:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13605:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "13591:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 968,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13591:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13570:48:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "13642:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 971,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13642:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13641:8:0"
									},
									"scope": 999,
									"src": "13556:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "13775:98:0",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "chainId",
														"nameLocation": "13793:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "13785:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"nodeType": "VariableDeclarationStatement",
												"src": "13785:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13819:24:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13821:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "13832:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "13832:9:0"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nodeType": "YulIdentifier",
																	"src": "13821:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 992,
														"isOffset": false,
														"isSlot": false,
														"src": "13821:7:0",
														"valueSize": 1
													}
												],
												"id": 994,
												"nodeType": "InlineAssembly",
												"src": "13810:33:0"
											},
											{
												"expression": {
													"id": 995,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 992,
													"src": "13859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 990,
												"id": 996,
												"nodeType": "Return",
												"src": "13852:14:0"
											}
										]
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nameLocation": "13733:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13743:2:0"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "13769:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13769:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13768:6:0"
									},
									"scope": 999,
									"src": "13724:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1000,
							"src": "1314:12561:0",
							"usedErrors": []
						}
					],
					"src": "1288:12588:0"
				},
				"id": 0
			}
		}
	}
}